// source: order_manager.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.ordermanager.CompanyReq', null, global);
goog.exportSymbol('proto.ordermanager.CustomerInfo', null, global);
goog.exportSymbol('proto.ordermanager.EmptyRequestBody', null, global);
goog.exportSymbol('proto.ordermanager.FilterCustomer', null, global);
goog.exportSymbol('proto.ordermanager.FilterDate', null, global);
goog.exportSymbol('proto.ordermanager.FilterLineItems', null, global);
goog.exportSymbol('proto.ordermanager.FilterOrder', null, global);
goog.exportSymbol('proto.ordermanager.GetOrderRequest', null, global);
goog.exportSymbol('proto.ordermanager.IntEnrichProductReply', null, global);
goog.exportSymbol('proto.ordermanager.IntEnrichProductRequest', null, global);
goog.exportSymbol('proto.ordermanager.ListOrdersReply', null, global);
goog.exportSymbol('proto.ordermanager.ListOrdersRequest', null, global);
goog.exportSymbol('proto.ordermanager.OrderDetails', null, global);
goog.exportSymbol('proto.ordermanager.OrderValue', null, global);
goog.exportSymbol('proto.ordermanager.OrdersCountReply', null, global);
goog.exportSymbol('proto.ordermanager.OrdersCountRequest', null, global);
goog.exportSymbol('proto.ordermanager.Product', null, global);
goog.exportSymbol('proto.ordermanager.Report', null, global);
goog.exportSymbol('proto.ordermanager.ReportReply', null, global);
goog.exportSymbol('proto.ordermanager.UpdateOrderReply', null, global);
goog.exportSymbol('proto.ordermanager.UpdateOrderStatusReply', null, global);
goog.exportSymbol('proto.ordermanager.UpdateOrderStatusRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.OrderValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.OrderValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.OrderValue.displayName = 'proto.ordermanager.OrderValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.Product = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.Product, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.Product.displayName = 'proto.ordermanager.Product';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.CustomerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.CustomerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.CustomerInfo.displayName = 'proto.ordermanager.CustomerInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.UpdateOrderReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.UpdateOrderReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.UpdateOrderReply.displayName = 'proto.ordermanager.UpdateOrderReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.FilterCustomer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.FilterCustomer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.FilterCustomer.displayName = 'proto.ordermanager.FilterCustomer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.FilterOrder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.FilterOrder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.FilterOrder.displayName = 'proto.ordermanager.FilterOrder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.FilterDate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.FilterDate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.FilterDate.displayName = 'proto.ordermanager.FilterDate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.FilterLineItems = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.FilterLineItems, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.FilterLineItems.displayName = 'proto.ordermanager.FilterLineItems';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.ListOrdersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ordermanager.ListOrdersRequest.repeatedFields_, null);
};
goog.inherits(proto.ordermanager.ListOrdersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.ListOrdersRequest.displayName = 'proto.ordermanager.ListOrdersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.ListOrdersReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ordermanager.ListOrdersReply.repeatedFields_, null);
};
goog.inherits(proto.ordermanager.ListOrdersReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.ListOrdersReply.displayName = 'proto.ordermanager.ListOrdersReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.OrderDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ordermanager.OrderDetails.repeatedFields_, null);
};
goog.inherits(proto.ordermanager.OrderDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.OrderDetails.displayName = 'proto.ordermanager.OrderDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.UpdateOrderStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.UpdateOrderStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.UpdateOrderStatusRequest.displayName = 'proto.ordermanager.UpdateOrderStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.UpdateOrderStatusReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.UpdateOrderStatusReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.UpdateOrderStatusReply.displayName = 'proto.ordermanager.UpdateOrderStatusReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.OrdersCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ordermanager.OrdersCountRequest.repeatedFields_, null);
};
goog.inherits(proto.ordermanager.OrdersCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.OrdersCountRequest.displayName = 'proto.ordermanager.OrdersCountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.OrdersCountReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.OrdersCountReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.OrdersCountReply.displayName = 'proto.ordermanager.OrdersCountReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.GetOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.GetOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.GetOrderRequest.displayName = 'proto.ordermanager.GetOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.IntEnrichProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.IntEnrichProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.IntEnrichProductRequest.displayName = 'proto.ordermanager.IntEnrichProductRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.IntEnrichProductReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.IntEnrichProductReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.IntEnrichProductReply.displayName = 'proto.ordermanager.IntEnrichProductReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.EmptyRequestBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.EmptyRequestBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.EmptyRequestBody.displayName = 'proto.ordermanager.EmptyRequestBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.CompanyReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.CompanyReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.CompanyReq.displayName = 'proto.ordermanager.CompanyReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.Report = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.Report, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.Report.displayName = 'proto.ordermanager.Report';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ordermanager.ReportReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ordermanager.ReportReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ordermanager.ReportReply.displayName = 'proto.ordermanager.ReportReply';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.OrderValue.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.OrderValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.OrderValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.OrderValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    subtotal: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    shipping: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    tax: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    discount: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.OrderValue}
 */
proto.ordermanager.OrderValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.OrderValue;
  return proto.ordermanager.OrderValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.OrderValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.OrderValue}
 */
proto.ordermanager.OrderValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotal(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSubtotal(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setShipping(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTax(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDiscount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.OrderValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.OrderValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.OrderValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.OrderValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getSubtotal();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getShipping();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getTax();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getDiscount();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
};


/**
 * optional float total = 1;
 * @return {number}
 */
proto.ordermanager.OrderValue.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.OrderValue} returns this
 */
proto.ordermanager.OrderValue.prototype.setTotal = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float subtotal = 2;
 * @return {number}
 */
proto.ordermanager.OrderValue.prototype.getSubtotal = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.OrderValue} returns this
 */
proto.ordermanager.OrderValue.prototype.setSubtotal = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float shipping = 3;
 * @return {number}
 */
proto.ordermanager.OrderValue.prototype.getShipping = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.OrderValue} returns this
 */
proto.ordermanager.OrderValue.prototype.setShipping = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float tax = 4;
 * @return {number}
 */
proto.ordermanager.OrderValue.prototype.getTax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.OrderValue} returns this
 */
proto.ordermanager.OrderValue.prototype.setTax = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float discount = 5;
 * @return {number}
 */
proto.ordermanager.OrderValue.prototype.getDiscount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.OrderValue} returns this
 */
proto.ordermanager.OrderValue.prototype.setDiscount = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.Product.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.Product.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.Product} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.Product.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sku: jspb.Message.getFieldWithDefault(msg, 3, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 4, 0),
    api2cartOrderProductId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    shopifyOrderProductId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    shipswiftProductId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    shipswiftProductName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    shipswiftProductSku: jspb.Message.getFieldWithDefault(msg, 9, ""),
    price: (f = msg.getPrice()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.Product}
 */
proto.ordermanager.Product.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.Product;
  return proto.ordermanager.Product.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.Product} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.Product}
 */
proto.ordermanager.Product.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQuantity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setApi2cartOrderProductId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setShopifyOrderProductId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setShipswiftProductId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setShipswiftProductName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setShipswiftProductSku(value);
      break;
    case 10:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.Product.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.Product.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.Product} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.Product.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getApi2cartOrderProductId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getShopifyOrderProductId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getShipswiftProductId();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getShipswiftProductName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getShipswiftProductSku();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ordermanager.Product.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.Product} returns this
 */
proto.ordermanager.Product.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ordermanager.Product.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.Product} returns this
 */
proto.ordermanager.Product.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sku = 3;
 * @return {string}
 */
proto.ordermanager.Product.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.Product} returns this
 */
proto.ordermanager.Product.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 quantity = 4;
 * @return {number}
 */
proto.ordermanager.Product.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.Product} returns this
 */
proto.ordermanager.Product.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string api2cart_order_product_id = 5;
 * @return {string}
 */
proto.ordermanager.Product.prototype.getApi2cartOrderProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.Product} returns this
 */
proto.ordermanager.Product.prototype.setApi2cartOrderProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string shopify_order_product_id = 6;
 * @return {string}
 */
proto.ordermanager.Product.prototype.getShopifyOrderProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.Product} returns this
 */
proto.ordermanager.Product.prototype.setShopifyOrderProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint64 shipswift_product_id = 7;
 * @return {number}
 */
proto.ordermanager.Product.prototype.getShipswiftProductId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.Product} returns this
 */
proto.ordermanager.Product.prototype.setShipswiftProductId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string shipswift_product_name = 8;
 * @return {string}
 */
proto.ordermanager.Product.prototype.getShipswiftProductName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.Product} returns this
 */
proto.ordermanager.Product.prototype.setShipswiftProductName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string shipswift_product_sku = 9;
 * @return {string}
 */
proto.ordermanager.Product.prototype.getShipswiftProductSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.Product} returns this
 */
proto.ordermanager.Product.prototype.setShipswiftProductSku = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional google.protobuf.FloatValue price = 10;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.ordermanager.Product.prototype.getPrice = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 10));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.ordermanager.Product} returns this
*/
proto.ordermanager.Product.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.Product} returns this
 */
proto.ordermanager.Product.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.Product.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.CustomerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.CustomerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.CustomerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.CustomerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fullName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    company: jspb.Message.getFieldWithDefault(msg, 3, ""),
    address1: jspb.Message.getFieldWithDefault(msg, 4, ""),
    address2: jspb.Message.getFieldWithDefault(msg, 5, ""),
    city: jspb.Message.getFieldWithDefault(msg, 6, ""),
    country: jspb.Message.getFieldWithDefault(msg, 7, ""),
    countryCode2: jspb.Message.getFieldWithDefault(msg, 8, ""),
    stateCode: jspb.Message.getFieldWithDefault(msg, 9, ""),
    stateName: jspb.Message.getFieldWithDefault(msg, 10, ""),
    postcode: jspb.Message.getFieldWithDefault(msg, 11, ""),
    phoneNumber: jspb.Message.getFieldWithDefault(msg, 12, ""),
    email: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.CustomerInfo}
 */
proto.ordermanager.CustomerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.CustomerInfo;
  return proto.ordermanager.CustomerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.CustomerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.CustomerInfo}
 */
proto.ordermanager.CustomerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompany(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress1(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress2(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode2(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStateCode(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setStateName(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostcode(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumber(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.CustomerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.CustomerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.CustomerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.CustomerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFullName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompany();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAddress1();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAddress2();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCountryCode2();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStateCode();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStateName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPostcode();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPhoneNumber();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ordermanager.CustomerInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.CustomerInfo} returns this
 */
proto.ordermanager.CustomerInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string full_name = 2;
 * @return {string}
 */
proto.ordermanager.CustomerInfo.prototype.getFullName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.CustomerInfo} returns this
 */
proto.ordermanager.CustomerInfo.prototype.setFullName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string company = 3;
 * @return {string}
 */
proto.ordermanager.CustomerInfo.prototype.getCompany = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.CustomerInfo} returns this
 */
proto.ordermanager.CustomerInfo.prototype.setCompany = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string address1 = 4;
 * @return {string}
 */
proto.ordermanager.CustomerInfo.prototype.getAddress1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.CustomerInfo} returns this
 */
proto.ordermanager.CustomerInfo.prototype.setAddress1 = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string address2 = 5;
 * @return {string}
 */
proto.ordermanager.CustomerInfo.prototype.getAddress2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.CustomerInfo} returns this
 */
proto.ordermanager.CustomerInfo.prototype.setAddress2 = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string city = 6;
 * @return {string}
 */
proto.ordermanager.CustomerInfo.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.CustomerInfo} returns this
 */
proto.ordermanager.CustomerInfo.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string country = 7;
 * @return {string}
 */
proto.ordermanager.CustomerInfo.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.CustomerInfo} returns this
 */
proto.ordermanager.CustomerInfo.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string country_code2 = 8;
 * @return {string}
 */
proto.ordermanager.CustomerInfo.prototype.getCountryCode2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.CustomerInfo} returns this
 */
proto.ordermanager.CustomerInfo.prototype.setCountryCode2 = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string state_code = 9;
 * @return {string}
 */
proto.ordermanager.CustomerInfo.prototype.getStateCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.CustomerInfo} returns this
 */
proto.ordermanager.CustomerInfo.prototype.setStateCode = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string state_name = 10;
 * @return {string}
 */
proto.ordermanager.CustomerInfo.prototype.getStateName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.CustomerInfo} returns this
 */
proto.ordermanager.CustomerInfo.prototype.setStateName = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string postcode = 11;
 * @return {string}
 */
proto.ordermanager.CustomerInfo.prototype.getPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.CustomerInfo} returns this
 */
proto.ordermanager.CustomerInfo.prototype.setPostcode = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string phone_number = 12;
 * @return {string}
 */
proto.ordermanager.CustomerInfo.prototype.getPhoneNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.CustomerInfo} returns this
 */
proto.ordermanager.CustomerInfo.prototype.setPhoneNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string email = 13;
 * @return {string}
 */
proto.ordermanager.CustomerInfo.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.CustomerInfo} returns this
 */
proto.ordermanager.CustomerInfo.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.UpdateOrderReply.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.UpdateOrderReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.UpdateOrderReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.UpdateOrderReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.UpdateOrderReply}
 */
proto.ordermanager.UpdateOrderReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.UpdateOrderReply;
  return proto.ordermanager.UpdateOrderReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.UpdateOrderReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.UpdateOrderReply}
 */
proto.ordermanager.UpdateOrderReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.UpdateOrderReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.UpdateOrderReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.UpdateOrderReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.UpdateOrderReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.FilterCustomer.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.FilterCustomer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.FilterCustomer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.FilterCustomer.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    customerEmail: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customerPostcode: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.FilterCustomer}
 */
proto.ordermanager.FilterCustomer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.FilterCustomer;
  return proto.ordermanager.FilterCustomer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.FilterCustomer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.FilterCustomer}
 */
proto.ordermanager.FilterCustomer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerPostcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.FilterCustomer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.FilterCustomer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.FilterCustomer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.FilterCustomer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustomerEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomerPostcode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string customer_name = 1;
 * @return {string}
 */
proto.ordermanager.FilterCustomer.prototype.getCustomerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.FilterCustomer} returns this
 */
proto.ordermanager.FilterCustomer.prototype.setCustomerName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string customer_email = 2;
 * @return {string}
 */
proto.ordermanager.FilterCustomer.prototype.getCustomerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.FilterCustomer} returns this
 */
proto.ordermanager.FilterCustomer.prototype.setCustomerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string customer_postcode = 3;
 * @return {string}
 */
proto.ordermanager.FilterCustomer.prototype.getCustomerPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.FilterCustomer} returns this
 */
proto.ordermanager.FilterCustomer.prototype.setCustomerPostcode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.FilterOrder.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.FilterOrder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.FilterOrder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.FilterOrder.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderNumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productNameCustomerFreeTextSearch: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sku: jspb.Message.getFieldWithDefault(msg, 3, ""),
    shipswiftProductSku: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.FilterOrder}
 */
proto.ordermanager.FilterOrder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.FilterOrder;
  return proto.ordermanager.FilterOrder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.FilterOrder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.FilterOrder}
 */
proto.ordermanager.FilterOrder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductNameCustomerFreeTextSearch(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setShipswiftProductSku(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.FilterOrder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.FilterOrder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.FilterOrder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.FilterOrder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderNumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductNameCustomerFreeTextSearch();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getShipswiftProductSku();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string order_number = 1;
 * @return {string}
 */
proto.ordermanager.FilterOrder.prototype.getOrderNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.FilterOrder} returns this
 */
proto.ordermanager.FilterOrder.prototype.setOrderNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string product_name_customer_free_text_search = 2;
 * @return {string}
 */
proto.ordermanager.FilterOrder.prototype.getProductNameCustomerFreeTextSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.FilterOrder} returns this
 */
proto.ordermanager.FilterOrder.prototype.setProductNameCustomerFreeTextSearch = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sku = 3;
 * @return {string}
 */
proto.ordermanager.FilterOrder.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.FilterOrder} returns this
 */
proto.ordermanager.FilterOrder.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string shipswift_product_sku = 4;
 * @return {string}
 */
proto.ordermanager.FilterOrder.prototype.getShipswiftProductSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.FilterOrder} returns this
 */
proto.ordermanager.FilterOrder.prototype.setShipswiftProductSku = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.FilterDate.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.FilterDate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.FilterDate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.FilterDate.toObject = function(includeInstance, msg) {
  var f, obj = {
    orderFrom: (f = msg.getOrderFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    orderTo: (f = msg.getOrderTo()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.FilterDate}
 */
proto.ordermanager.FilterDate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.FilterDate;
  return proto.ordermanager.FilterDate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.FilterDate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.FilterDate}
 */
proto.ordermanager.FilterDate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setOrderFrom(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setOrderTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.FilterDate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.FilterDate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.FilterDate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.FilterDate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrderFrom();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOrderTo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp order_from = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ordermanager.FilterDate.prototype.getOrderFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ordermanager.FilterDate} returns this
*/
proto.ordermanager.FilterDate.prototype.setOrderFrom = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.FilterDate} returns this
 */
proto.ordermanager.FilterDate.prototype.clearOrderFrom = function() {
  return this.setOrderFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.FilterDate.prototype.hasOrderFrom = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp order_to = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ordermanager.FilterDate.prototype.getOrderTo = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ordermanager.FilterDate} returns this
*/
proto.ordermanager.FilterDate.prototype.setOrderTo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.FilterDate} returns this
 */
proto.ordermanager.FilterDate.prototype.clearOrderTo = function() {
  return this.setOrderTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.FilterDate.prototype.hasOrderTo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.FilterLineItems.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.FilterLineItems.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.FilterLineItems} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.FilterLineItems.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0),
    minValue: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxValue: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.FilterLineItems}
 */
proto.ordermanager.FilterLineItems.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.FilterLineItems;
  return proto.ordermanager.FilterLineItems.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.FilterLineItems} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.FilterLineItems}
 */
proto.ordermanager.FilterLineItems.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.FilterLineItems.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.FilterLineItems.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.FilterLineItems} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.FilterLineItems.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMinValue();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getMaxValue();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.ordermanager.FilterLineItems.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.FilterLineItems} returns this
 */
proto.ordermanager.FilterLineItems.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 value = 2;
 * @return {number}
 */
proto.ordermanager.FilterLineItems.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.FilterLineItems} returns this
 */
proto.ordermanager.FilterLineItems.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 min_value = 3;
 * @return {number}
 */
proto.ordermanager.FilterLineItems.prototype.getMinValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.FilterLineItems} returns this
 */
proto.ordermanager.FilterLineItems.prototype.setMinValue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 max_value = 4;
 * @return {number}
 */
proto.ordermanager.FilterLineItems.prototype.getMaxValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.FilterLineItems} returns this
 */
proto.ordermanager.FilterLineItems.prototype.setMaxValue = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ordermanager.ListOrdersRequest.repeatedFields_ = [2,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.ListOrdersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.ListOrdersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.ListOrdersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.ListOrdersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    statusFilterList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    orderFilter: (f = msg.getOrderFilter()) && proto.ordermanager.FilterOrder.toObject(includeInstance, f),
    customerFilter: (f = msg.getCustomerFilter()) && proto.ordermanager.FilterCustomer.toObject(includeInstance, f),
    dateFilter: (f = msg.getDateFilter()) && proto.ordermanager.FilterDate.toObject(includeInstance, f),
    storesFilterList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    lineItems: (f = msg.getLineItems()) && proto.ordermanager.FilterLineItems.toObject(includeInstance, f),
    paginationCursor: jspb.Message.getFieldWithDefault(msg, 8, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 9, 0),
    productsEnrichedOnly: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.ListOrdersRequest}
 */
proto.ordermanager.ListOrdersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.ListOrdersRequest;
  return proto.ordermanager.ListOrdersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.ListOrdersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.ListOrdersRequest}
 */
proto.ordermanager.ListOrdersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addStatusFilter(value);
      break;
    case 3:
      var value = new proto.ordermanager.FilterOrder;
      reader.readMessage(value,proto.ordermanager.FilterOrder.deserializeBinaryFromReader);
      msg.setOrderFilter(value);
      break;
    case 4:
      var value = new proto.ordermanager.FilterCustomer;
      reader.readMessage(value,proto.ordermanager.FilterCustomer.deserializeBinaryFromReader);
      msg.setCustomerFilter(value);
      break;
    case 5:
      var value = new proto.ordermanager.FilterDate;
      reader.readMessage(value,proto.ordermanager.FilterDate.deserializeBinaryFromReader);
      msg.setDateFilter(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addStoresFilter(value);
      break;
    case 7:
      var value = new proto.ordermanager.FilterLineItems;
      reader.readMessage(value,proto.ordermanager.FilterLineItems.deserializeBinaryFromReader);
      msg.setLineItems(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaginationCursor(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProductsEnrichedOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.ListOrdersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.ListOrdersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.ListOrdersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.ListOrdersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatusFilterList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getOrderFilter();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ordermanager.FilterOrder.serializeBinaryToWriter
    );
  }
  f = message.getCustomerFilter();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ordermanager.FilterCustomer.serializeBinaryToWriter
    );
  }
  f = message.getDateFilter();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ordermanager.FilterDate.serializeBinaryToWriter
    );
  }
  f = message.getStoresFilterList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getLineItems();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ordermanager.FilterLineItems.serializeBinaryToWriter
    );
  }
  f = message.getPaginationCursor();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getProductsEnrichedOnly();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.ordermanager.ListOrdersRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
 */
proto.ordermanager.ListOrdersRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string status_filter = 2;
 * @return {!Array<string>}
 */
proto.ordermanager.ListOrdersRequest.prototype.getStatusFilterList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
 */
proto.ordermanager.ListOrdersRequest.prototype.setStatusFilterList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
 */
proto.ordermanager.ListOrdersRequest.prototype.addStatusFilter = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
 */
proto.ordermanager.ListOrdersRequest.prototype.clearStatusFilterList = function() {
  return this.setStatusFilterList([]);
};


/**
 * optional FilterOrder order_filter = 3;
 * @return {?proto.ordermanager.FilterOrder}
 */
proto.ordermanager.ListOrdersRequest.prototype.getOrderFilter = function() {
  return /** @type{?proto.ordermanager.FilterOrder} */ (
    jspb.Message.getWrapperField(this, proto.ordermanager.FilterOrder, 3));
};


/**
 * @param {?proto.ordermanager.FilterOrder|undefined} value
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
*/
proto.ordermanager.ListOrdersRequest.prototype.setOrderFilter = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
 */
proto.ordermanager.ListOrdersRequest.prototype.clearOrderFilter = function() {
  return this.setOrderFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.ListOrdersRequest.prototype.hasOrderFilter = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional FilterCustomer customer_filter = 4;
 * @return {?proto.ordermanager.FilterCustomer}
 */
proto.ordermanager.ListOrdersRequest.prototype.getCustomerFilter = function() {
  return /** @type{?proto.ordermanager.FilterCustomer} */ (
    jspb.Message.getWrapperField(this, proto.ordermanager.FilterCustomer, 4));
};


/**
 * @param {?proto.ordermanager.FilterCustomer|undefined} value
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
*/
proto.ordermanager.ListOrdersRequest.prototype.setCustomerFilter = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
 */
proto.ordermanager.ListOrdersRequest.prototype.clearCustomerFilter = function() {
  return this.setCustomerFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.ListOrdersRequest.prototype.hasCustomerFilter = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional FilterDate date_filter = 5;
 * @return {?proto.ordermanager.FilterDate}
 */
proto.ordermanager.ListOrdersRequest.prototype.getDateFilter = function() {
  return /** @type{?proto.ordermanager.FilterDate} */ (
    jspb.Message.getWrapperField(this, proto.ordermanager.FilterDate, 5));
};


/**
 * @param {?proto.ordermanager.FilterDate|undefined} value
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
*/
proto.ordermanager.ListOrdersRequest.prototype.setDateFilter = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
 */
proto.ordermanager.ListOrdersRequest.prototype.clearDateFilter = function() {
  return this.setDateFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.ListOrdersRequest.prototype.hasDateFilter = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string stores_filter = 6;
 * @return {!Array<string>}
 */
proto.ordermanager.ListOrdersRequest.prototype.getStoresFilterList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
 */
proto.ordermanager.ListOrdersRequest.prototype.setStoresFilterList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
 */
proto.ordermanager.ListOrdersRequest.prototype.addStoresFilter = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
 */
proto.ordermanager.ListOrdersRequest.prototype.clearStoresFilterList = function() {
  return this.setStoresFilterList([]);
};


/**
 * optional FilterLineItems line_items = 7;
 * @return {?proto.ordermanager.FilterLineItems}
 */
proto.ordermanager.ListOrdersRequest.prototype.getLineItems = function() {
  return /** @type{?proto.ordermanager.FilterLineItems} */ (
    jspb.Message.getWrapperField(this, proto.ordermanager.FilterLineItems, 7));
};


/**
 * @param {?proto.ordermanager.FilterLineItems|undefined} value
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
*/
proto.ordermanager.ListOrdersRequest.prototype.setLineItems = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
 */
proto.ordermanager.ListOrdersRequest.prototype.clearLineItems = function() {
  return this.setLineItems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.ListOrdersRequest.prototype.hasLineItems = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string pagination_cursor = 8;
 * @return {string}
 */
proto.ordermanager.ListOrdersRequest.prototype.getPaginationCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
 */
proto.ordermanager.ListOrdersRequest.prototype.setPaginationCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint32 page_size = 9;
 * @return {number}
 */
proto.ordermanager.ListOrdersRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
 */
proto.ordermanager.ListOrdersRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bool products_enriched_only = 10;
 * @return {boolean}
 */
proto.ordermanager.ListOrdersRequest.prototype.getProductsEnrichedOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ordermanager.ListOrdersRequest} returns this
 */
proto.ordermanager.ListOrdersRequest.prototype.setProductsEnrichedOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ordermanager.ListOrdersReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.ListOrdersReply.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.ListOrdersReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.ListOrdersReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.ListOrdersReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    proto.ordermanager.OrderDetails.toObject, includeInstance),
    nextPageCursor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.ListOrdersReply}
 */
proto.ordermanager.ListOrdersReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.ListOrdersReply;
  return proto.ordermanager.ListOrdersReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.ListOrdersReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.ListOrdersReply}
 */
proto.ordermanager.ListOrdersReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ordermanager.OrderDetails;
      reader.readMessage(value,proto.ordermanager.OrderDetails.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageCursor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.ListOrdersReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.ListOrdersReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.ListOrdersReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.ListOrdersReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ordermanager.OrderDetails.serializeBinaryToWriter
    );
  }
  f = message.getNextPageCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * repeated OrderDetails orders = 1;
 * @return {!Array<!proto.ordermanager.OrderDetails>}
 */
proto.ordermanager.ListOrdersReply.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.ordermanager.OrderDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ordermanager.OrderDetails, 1));
};


/**
 * @param {!Array<!proto.ordermanager.OrderDetails>} value
 * @return {!proto.ordermanager.ListOrdersReply} returns this
*/
proto.ordermanager.ListOrdersReply.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ordermanager.OrderDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ordermanager.OrderDetails}
 */
proto.ordermanager.ListOrdersReply.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ordermanager.OrderDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ordermanager.ListOrdersReply} returns this
 */
proto.ordermanager.ListOrdersReply.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};


/**
 * optional string next_page_cursor = 2;
 * @return {string}
 */
proto.ordermanager.ListOrdersReply.prototype.getNextPageCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.ListOrdersReply} returns this
 */
proto.ordermanager.ListOrdersReply.prototype.setNextPageCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 page_size = 3;
 * @return {number}
 */
proto.ordermanager.ListOrdersReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.ListOrdersReply} returns this
 */
proto.ordermanager.ListOrdersReply.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ordermanager.OrderDetails.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.OrderDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.OrderDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.OrderDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.OrderDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    companyId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orderNumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    customer: (f = msg.getCustomer()) && proto.ordermanager.CustomerInfo.toObject(includeInstance, f),
    billing: (f = msg.getBilling()) && proto.ordermanager.CustomerInfo.toObject(includeInstance, f),
    paymentMethod: jspb.Message.getFieldWithDefault(msg, 6, ""),
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.ordermanager.Product.toObject, includeInstance),
    orderValue: (f = msg.getOrderValue()) && proto.ordermanager.OrderValue.toObject(includeInstance, f),
    shippingMethod: jspb.Message.getFieldWithDefault(msg, 9, ""),
    status: jspb.Message.getFieldWithDefault(msg, 10, ""),
    customerNotes: jspb.Message.getFieldWithDefault(msg, 11, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    labelLink: jspb.Message.getFieldWithDefault(msg, 13, ""),
    productsEnriched: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    shopifyOrderId: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.OrderDetails}
 */
proto.ordermanager.OrderDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.OrderDetails;
  return proto.ordermanager.OrderDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.OrderDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.OrderDetails}
 */
proto.ordermanager.OrderDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderNumber(value);
      break;
    case 4:
      var value = new proto.ordermanager.CustomerInfo;
      reader.readMessage(value,proto.ordermanager.CustomerInfo.deserializeBinaryFromReader);
      msg.setCustomer(value);
      break;
    case 5:
      var value = new proto.ordermanager.CustomerInfo;
      reader.readMessage(value,proto.ordermanager.CustomerInfo.deserializeBinaryFromReader);
      msg.setBilling(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentMethod(value);
      break;
    case 7:
      var value = new proto.ordermanager.Product;
      reader.readMessage(value,proto.ordermanager.Product.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    case 8:
      var value = new proto.ordermanager.OrderValue;
      reader.readMessage(value,proto.ordermanager.OrderValue.deserializeBinaryFromReader);
      msg.setOrderValue(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setShippingMethod(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerNotes(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabelLink(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProductsEnriched(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShopifyOrderId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.OrderDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.OrderDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.OrderDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.OrderDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrderNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCustomer();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ordermanager.CustomerInfo.serializeBinaryToWriter
    );
  }
  f = message.getBilling();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ordermanager.CustomerInfo.serializeBinaryToWriter
    );
  }
  f = message.getPaymentMethod();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.ordermanager.Product.serializeBinaryToWriter
    );
  }
  f = message.getOrderValue();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ordermanager.OrderValue.serializeBinaryToWriter
    );
  }
  f = message.getShippingMethod();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCustomerNotes();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLabelLink();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getProductsEnriched();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getShopifyOrderId();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
};


/**
 * optional string store_id = 1;
 * @return {string}
 */
proto.ordermanager.OrderDetails.prototype.getStoreId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.setStoreId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string company_id = 2;
 * @return {string}
 */
proto.ordermanager.OrderDetails.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string order_number = 3;
 * @return {string}
 */
proto.ordermanager.OrderDetails.prototype.getOrderNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.setOrderNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional CustomerInfo customer = 4;
 * @return {?proto.ordermanager.CustomerInfo}
 */
proto.ordermanager.OrderDetails.prototype.getCustomer = function() {
  return /** @type{?proto.ordermanager.CustomerInfo} */ (
    jspb.Message.getWrapperField(this, proto.ordermanager.CustomerInfo, 4));
};


/**
 * @param {?proto.ordermanager.CustomerInfo|undefined} value
 * @return {!proto.ordermanager.OrderDetails} returns this
*/
proto.ordermanager.OrderDetails.prototype.setCustomer = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.clearCustomer = function() {
  return this.setCustomer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.OrderDetails.prototype.hasCustomer = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CustomerInfo billing = 5;
 * @return {?proto.ordermanager.CustomerInfo}
 */
proto.ordermanager.OrderDetails.prototype.getBilling = function() {
  return /** @type{?proto.ordermanager.CustomerInfo} */ (
    jspb.Message.getWrapperField(this, proto.ordermanager.CustomerInfo, 5));
};


/**
 * @param {?proto.ordermanager.CustomerInfo|undefined} value
 * @return {!proto.ordermanager.OrderDetails} returns this
*/
proto.ordermanager.OrderDetails.prototype.setBilling = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.clearBilling = function() {
  return this.setBilling(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.OrderDetails.prototype.hasBilling = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string payment_method = 6;
 * @return {string}
 */
proto.ordermanager.OrderDetails.prototype.getPaymentMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.setPaymentMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated Product products = 7;
 * @return {!Array<!proto.ordermanager.Product>}
 */
proto.ordermanager.OrderDetails.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.ordermanager.Product>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ordermanager.Product, 7));
};


/**
 * @param {!Array<!proto.ordermanager.Product>} value
 * @return {!proto.ordermanager.OrderDetails} returns this
*/
proto.ordermanager.OrderDetails.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.ordermanager.Product=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ordermanager.Product}
 */
proto.ordermanager.OrderDetails.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.ordermanager.Product, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};


/**
 * optional OrderValue order_value = 8;
 * @return {?proto.ordermanager.OrderValue}
 */
proto.ordermanager.OrderDetails.prototype.getOrderValue = function() {
  return /** @type{?proto.ordermanager.OrderValue} */ (
    jspb.Message.getWrapperField(this, proto.ordermanager.OrderValue, 8));
};


/**
 * @param {?proto.ordermanager.OrderValue|undefined} value
 * @return {!proto.ordermanager.OrderDetails} returns this
*/
proto.ordermanager.OrderDetails.prototype.setOrderValue = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.clearOrderValue = function() {
  return this.setOrderValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.OrderDetails.prototype.hasOrderValue = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string shipping_method = 9;
 * @return {string}
 */
proto.ordermanager.OrderDetails.prototype.getShippingMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.setShippingMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string status = 10;
 * @return {string}
 */
proto.ordermanager.OrderDetails.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string customer_notes = 11;
 * @return {string}
 */
proto.ordermanager.OrderDetails.prototype.getCustomerNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.setCustomerNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ordermanager.OrderDetails.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ordermanager.OrderDetails} returns this
*/
proto.ordermanager.OrderDetails.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.OrderDetails.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string label_link = 13;
 * @return {string}
 */
proto.ordermanager.OrderDetails.prototype.getLabelLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.setLabelLink = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bool products_enriched = 14;
 * @return {boolean}
 */
proto.ordermanager.OrderDetails.prototype.getProductsEnriched = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.setProductsEnriched = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional int64 shopify_order_id = 15;
 * @return {number}
 */
proto.ordermanager.OrderDetails.prototype.getShopifyOrderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.OrderDetails} returns this
 */
proto.ordermanager.OrderDetails.prototype.setShopifyOrderId = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.UpdateOrderStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.UpdateOrderStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.UpdateOrderStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    storeType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    orderId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getFieldWithDefault(msg, 5, ""),
    shippedAt: (f = msg.getShippedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    doesStoreNeedUpdate: (f = msg.getDoesStoreNeedUpdate()) && google_protobuf_wrappers_pb.BoolValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.UpdateOrderStatusRequest}
 */
proto.ordermanager.UpdateOrderStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.UpdateOrderStatusRequest;
  return proto.ordermanager.UpdateOrderStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.UpdateOrderStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.UpdateOrderStatusRequest}
 */
proto.ordermanager.UpdateOrderStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setShippedAt(value);
      break;
    case 7:
      var value = new google_protobuf_wrappers_pb.BoolValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BoolValue.deserializeBinaryFromReader);
      msg.setDoesStoreNeedUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.UpdateOrderStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.UpdateOrderStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.UpdateOrderStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStoreType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getShippedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDoesStoreNeedUpdate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_wrappers_pb.BoolValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.UpdateOrderStatusRequest} returns this
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string store_id = 2;
 * @return {string}
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.getStoreId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.UpdateOrderStatusRequest} returns this
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.setStoreId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string store_type = 3;
 * @return {string}
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.getStoreType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.UpdateOrderStatusRequest} returns this
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.setStoreType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string order_id = 4;
 * @return {string}
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.UpdateOrderStatusRequest} returns this
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.UpdateOrderStatusRequest} returns this
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp shipped_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.getShippedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.ordermanager.UpdateOrderStatusRequest} returns this
*/
proto.ordermanager.UpdateOrderStatusRequest.prototype.setShippedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.UpdateOrderStatusRequest} returns this
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.clearShippedAt = function() {
  return this.setShippedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.hasShippedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.BoolValue does_store_need_update = 7;
 * @return {?proto.google.protobuf.BoolValue}
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.getDoesStoreNeedUpdate = function() {
  return /** @type{?proto.google.protobuf.BoolValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BoolValue, 7));
};


/**
 * @param {?proto.google.protobuf.BoolValue|undefined} value
 * @return {!proto.ordermanager.UpdateOrderStatusRequest} returns this
*/
proto.ordermanager.UpdateOrderStatusRequest.prototype.setDoesStoreNeedUpdate = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.UpdateOrderStatusRequest} returns this
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.clearDoesStoreNeedUpdate = function() {
  return this.setDoesStoreNeedUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.UpdateOrderStatusRequest.prototype.hasDoesStoreNeedUpdate = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.UpdateOrderStatusReply.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.UpdateOrderStatusReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.UpdateOrderStatusReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.UpdateOrderStatusReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.UpdateOrderStatusReply}
 */
proto.ordermanager.UpdateOrderStatusReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.UpdateOrderStatusReply;
  return proto.ordermanager.UpdateOrderStatusReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.UpdateOrderStatusReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.UpdateOrderStatusReply}
 */
proto.ordermanager.UpdateOrderStatusReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.UpdateOrderStatusReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.UpdateOrderStatusReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.UpdateOrderStatusReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.UpdateOrderStatusReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ordermanager.OrdersCountRequest.repeatedFields_ = [2,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.OrdersCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.OrdersCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.OrdersCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.OrdersCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    statusFilterList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    orderFilter: (f = msg.getOrderFilter()) && proto.ordermanager.FilterOrder.toObject(includeInstance, f),
    customerFilter: (f = msg.getCustomerFilter()) && proto.ordermanager.FilterCustomer.toObject(includeInstance, f),
    dateFilter: (f = msg.getDateFilter()) && proto.ordermanager.FilterDate.toObject(includeInstance, f),
    storesFilterList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    lineItems: (f = msg.getLineItems()) && proto.ordermanager.FilterLineItems.toObject(includeInstance, f),
    productsEnrichedOnly: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.OrdersCountRequest}
 */
proto.ordermanager.OrdersCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.OrdersCountRequest;
  return proto.ordermanager.OrdersCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.OrdersCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.OrdersCountRequest}
 */
proto.ordermanager.OrdersCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addStatusFilter(value);
      break;
    case 3:
      var value = new proto.ordermanager.FilterOrder;
      reader.readMessage(value,proto.ordermanager.FilterOrder.deserializeBinaryFromReader);
      msg.setOrderFilter(value);
      break;
    case 4:
      var value = new proto.ordermanager.FilterCustomer;
      reader.readMessage(value,proto.ordermanager.FilterCustomer.deserializeBinaryFromReader);
      msg.setCustomerFilter(value);
      break;
    case 5:
      var value = new proto.ordermanager.FilterDate;
      reader.readMessage(value,proto.ordermanager.FilterDate.deserializeBinaryFromReader);
      msg.setDateFilter(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addStoresFilter(value);
      break;
    case 7:
      var value = new proto.ordermanager.FilterLineItems;
      reader.readMessage(value,proto.ordermanager.FilterLineItems.deserializeBinaryFromReader);
      msg.setLineItems(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProductsEnrichedOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.OrdersCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.OrdersCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.OrdersCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.OrdersCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatusFilterList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getOrderFilter();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ordermanager.FilterOrder.serializeBinaryToWriter
    );
  }
  f = message.getCustomerFilter();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.ordermanager.FilterCustomer.serializeBinaryToWriter
    );
  }
  f = message.getDateFilter();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.ordermanager.FilterDate.serializeBinaryToWriter
    );
  }
  f = message.getStoresFilterList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getLineItems();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ordermanager.FilterLineItems.serializeBinaryToWriter
    );
  }
  f = message.getProductsEnrichedOnly();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.ordermanager.OrdersCountRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
 */
proto.ordermanager.OrdersCountRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string status_filter = 2;
 * @return {!Array<string>}
 */
proto.ordermanager.OrdersCountRequest.prototype.getStatusFilterList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
 */
proto.ordermanager.OrdersCountRequest.prototype.setStatusFilterList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
 */
proto.ordermanager.OrdersCountRequest.prototype.addStatusFilter = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
 */
proto.ordermanager.OrdersCountRequest.prototype.clearStatusFilterList = function() {
  return this.setStatusFilterList([]);
};


/**
 * optional FilterOrder order_filter = 3;
 * @return {?proto.ordermanager.FilterOrder}
 */
proto.ordermanager.OrdersCountRequest.prototype.getOrderFilter = function() {
  return /** @type{?proto.ordermanager.FilterOrder} */ (
    jspb.Message.getWrapperField(this, proto.ordermanager.FilterOrder, 3));
};


/**
 * @param {?proto.ordermanager.FilterOrder|undefined} value
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
*/
proto.ordermanager.OrdersCountRequest.prototype.setOrderFilter = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
 */
proto.ordermanager.OrdersCountRequest.prototype.clearOrderFilter = function() {
  return this.setOrderFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.OrdersCountRequest.prototype.hasOrderFilter = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional FilterCustomer customer_filter = 4;
 * @return {?proto.ordermanager.FilterCustomer}
 */
proto.ordermanager.OrdersCountRequest.prototype.getCustomerFilter = function() {
  return /** @type{?proto.ordermanager.FilterCustomer} */ (
    jspb.Message.getWrapperField(this, proto.ordermanager.FilterCustomer, 4));
};


/**
 * @param {?proto.ordermanager.FilterCustomer|undefined} value
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
*/
proto.ordermanager.OrdersCountRequest.prototype.setCustomerFilter = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
 */
proto.ordermanager.OrdersCountRequest.prototype.clearCustomerFilter = function() {
  return this.setCustomerFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.OrdersCountRequest.prototype.hasCustomerFilter = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional FilterDate date_filter = 5;
 * @return {?proto.ordermanager.FilterDate}
 */
proto.ordermanager.OrdersCountRequest.prototype.getDateFilter = function() {
  return /** @type{?proto.ordermanager.FilterDate} */ (
    jspb.Message.getWrapperField(this, proto.ordermanager.FilterDate, 5));
};


/**
 * @param {?proto.ordermanager.FilterDate|undefined} value
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
*/
proto.ordermanager.OrdersCountRequest.prototype.setDateFilter = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
 */
proto.ordermanager.OrdersCountRequest.prototype.clearDateFilter = function() {
  return this.setDateFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.OrdersCountRequest.prototype.hasDateFilter = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string stores_filter = 6;
 * @return {!Array<string>}
 */
proto.ordermanager.OrdersCountRequest.prototype.getStoresFilterList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
 */
proto.ordermanager.OrdersCountRequest.prototype.setStoresFilterList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
 */
proto.ordermanager.OrdersCountRequest.prototype.addStoresFilter = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
 */
proto.ordermanager.OrdersCountRequest.prototype.clearStoresFilterList = function() {
  return this.setStoresFilterList([]);
};


/**
 * optional FilterLineItems line_items = 7;
 * @return {?proto.ordermanager.FilterLineItems}
 */
proto.ordermanager.OrdersCountRequest.prototype.getLineItems = function() {
  return /** @type{?proto.ordermanager.FilterLineItems} */ (
    jspb.Message.getWrapperField(this, proto.ordermanager.FilterLineItems, 7));
};


/**
 * @param {?proto.ordermanager.FilterLineItems|undefined} value
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
*/
proto.ordermanager.OrdersCountRequest.prototype.setLineItems = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
 */
proto.ordermanager.OrdersCountRequest.prototype.clearLineItems = function() {
  return this.setLineItems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.OrdersCountRequest.prototype.hasLineItems = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool products_enriched_only = 8;
 * @return {boolean}
 */
proto.ordermanager.OrdersCountRequest.prototype.getProductsEnrichedOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ordermanager.OrdersCountRequest} returns this
 */
proto.ordermanager.OrdersCountRequest.prototype.setProductsEnrichedOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.OrdersCountReply.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.OrdersCountReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.OrdersCountReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.OrdersCountReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.OrdersCountReply}
 */
proto.ordermanager.OrdersCountReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.OrdersCountReply;
  return proto.ordermanager.OrdersCountReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.OrdersCountReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.OrdersCountReply}
 */
proto.ordermanager.OrdersCountReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.OrdersCountReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.OrdersCountReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.OrdersCountReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.OrdersCountReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.ordermanager.OrdersCountReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.OrdersCountReply} returns this
 */
proto.ordermanager.OrdersCountReply.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.GetOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.GetOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.GetOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.GetOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orderNumber: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.GetOrderRequest}
 */
proto.ordermanager.GetOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.GetOrderRequest;
  return proto.ordermanager.GetOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.GetOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.GetOrderRequest}
 */
proto.ordermanager.GetOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.GetOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.GetOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.GetOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.GetOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrderNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.ordermanager.GetOrderRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.GetOrderRequest} returns this
 */
proto.ordermanager.GetOrderRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string store_id = 2;
 * @return {string}
 */
proto.ordermanager.GetOrderRequest.prototype.getStoreId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.GetOrderRequest} returns this
 */
proto.ordermanager.GetOrderRequest.prototype.setStoreId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string order_number = 3;
 * @return {string}
 */
proto.ordermanager.GetOrderRequest.prototype.getOrderNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.GetOrderRequest} returns this
 */
proto.ordermanager.GetOrderRequest.prototype.setOrderNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.IntEnrichProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.IntEnrichProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.IntEnrichProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.IntEnrichProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sku: jspb.Message.getFieldWithDefault(msg, 2, ""),
    shipswiftProductId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    shipswiftProductName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    shipswiftProductSku: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.IntEnrichProductRequest}
 */
proto.ordermanager.IntEnrichProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.IntEnrichProductRequest;
  return proto.ordermanager.IntEnrichProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.IntEnrichProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.IntEnrichProductRequest}
 */
proto.ordermanager.IntEnrichProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setShipswiftProductId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setShipswiftProductName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setShipswiftProductSku(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.IntEnrichProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.IntEnrichProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.IntEnrichProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.IntEnrichProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getShipswiftProductId();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getShipswiftProductName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getShipswiftProductSku();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.ordermanager.IntEnrichProductRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.IntEnrichProductRequest} returns this
 */
proto.ordermanager.IntEnrichProductRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sku = 2;
 * @return {string}
 */
proto.ordermanager.IntEnrichProductRequest.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.IntEnrichProductRequest} returns this
 */
proto.ordermanager.IntEnrichProductRequest.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 shipswift_product_id = 3;
 * @return {number}
 */
proto.ordermanager.IntEnrichProductRequest.prototype.getShipswiftProductId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.IntEnrichProductRequest} returns this
 */
proto.ordermanager.IntEnrichProductRequest.prototype.setShipswiftProductId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string shipswift_product_name = 4;
 * @return {string}
 */
proto.ordermanager.IntEnrichProductRequest.prototype.getShipswiftProductName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.IntEnrichProductRequest} returns this
 */
proto.ordermanager.IntEnrichProductRequest.prototype.setShipswiftProductName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string shipswift_product_sku = 5;
 * @return {string}
 */
proto.ordermanager.IntEnrichProductRequest.prototype.getShipswiftProductSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.IntEnrichProductRequest} returns this
 */
proto.ordermanager.IntEnrichProductRequest.prototype.setShipswiftProductSku = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.IntEnrichProductReply.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.IntEnrichProductReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.IntEnrichProductReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.IntEnrichProductReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.IntEnrichProductReply}
 */
proto.ordermanager.IntEnrichProductReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.IntEnrichProductReply;
  return proto.ordermanager.IntEnrichProductReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.IntEnrichProductReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.IntEnrichProductReply}
 */
proto.ordermanager.IntEnrichProductReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.IntEnrichProductReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.IntEnrichProductReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.IntEnrichProductReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.IntEnrichProductReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.EmptyRequestBody.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.EmptyRequestBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.EmptyRequestBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.EmptyRequestBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.EmptyRequestBody}
 */
proto.ordermanager.EmptyRequestBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.EmptyRequestBody;
  return proto.ordermanager.EmptyRequestBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.EmptyRequestBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.EmptyRequestBody}
 */
proto.ordermanager.EmptyRequestBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.EmptyRequestBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.EmptyRequestBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.EmptyRequestBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.EmptyRequestBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.CompanyReq.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.CompanyReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.CompanyReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.CompanyReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.CompanyReq}
 */
proto.ordermanager.CompanyReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.CompanyReq;
  return proto.ordermanager.CompanyReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.CompanyReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.CompanyReq}
 */
proto.ordermanager.CompanyReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.CompanyReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.CompanyReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.CompanyReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.CompanyReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.ordermanager.CompanyReq.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ordermanager.CompanyReq} returns this
 */
proto.ordermanager.CompanyReq.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.Report.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.Report.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.Report} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.Report.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalSalesValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    totalOrders: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalOrdersShipped: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.Report}
 */
proto.ordermanager.Report.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.Report;
  return proto.ordermanager.Report.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.Report} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.Report}
 */
proto.ordermanager.Report.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalSalesValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalOrders(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalOrdersShipped(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.Report.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.Report.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.Report} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.Report.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalSalesValue();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getTotalOrders();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTotalOrdersShipped();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional float total_sales_value = 1;
 * @return {number}
 */
proto.ordermanager.Report.prototype.getTotalSalesValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.Report} returns this
 */
proto.ordermanager.Report.prototype.setTotalSalesValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional uint64 total_orders = 2;
 * @return {number}
 */
proto.ordermanager.Report.prototype.getTotalOrders = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.Report} returns this
 */
proto.ordermanager.Report.prototype.setTotalOrders = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 total_orders_shipped = 3;
 * @return {number}
 */
proto.ordermanager.Report.prototype.getTotalOrdersShipped = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ordermanager.Report} returns this
 */
proto.ordermanager.Report.prototype.setTotalOrdersShipped = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ordermanager.ReportReply.prototype.toObject = function(opt_includeInstance) {
  return proto.ordermanager.ReportReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ordermanager.ReportReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.ReportReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    today: (f = msg.getToday()) && proto.ordermanager.Report.toObject(includeInstance, f),
    yesterday: (f = msg.getYesterday()) && proto.ordermanager.Report.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ordermanager.ReportReply}
 */
proto.ordermanager.ReportReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ordermanager.ReportReply;
  return proto.ordermanager.ReportReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ordermanager.ReportReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ordermanager.ReportReply}
 */
proto.ordermanager.ReportReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ordermanager.Report;
      reader.readMessage(value,proto.ordermanager.Report.deserializeBinaryFromReader);
      msg.setToday(value);
      break;
    case 2:
      var value = new proto.ordermanager.Report;
      reader.readMessage(value,proto.ordermanager.Report.deserializeBinaryFromReader);
      msg.setYesterday(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ordermanager.ReportReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ordermanager.ReportReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ordermanager.ReportReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ordermanager.ReportReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToday();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ordermanager.Report.serializeBinaryToWriter
    );
  }
  f = message.getYesterday();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ordermanager.Report.serializeBinaryToWriter
    );
  }
};


/**
 * optional Report today = 1;
 * @return {?proto.ordermanager.Report}
 */
proto.ordermanager.ReportReply.prototype.getToday = function() {
  return /** @type{?proto.ordermanager.Report} */ (
    jspb.Message.getWrapperField(this, proto.ordermanager.Report, 1));
};


/**
 * @param {?proto.ordermanager.Report|undefined} value
 * @return {!proto.ordermanager.ReportReply} returns this
*/
proto.ordermanager.ReportReply.prototype.setToday = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.ReportReply} returns this
 */
proto.ordermanager.ReportReply.prototype.clearToday = function() {
  return this.setToday(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.ReportReply.prototype.hasToday = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Report yesterday = 2;
 * @return {?proto.ordermanager.Report}
 */
proto.ordermanager.ReportReply.prototype.getYesterday = function() {
  return /** @type{?proto.ordermanager.Report} */ (
    jspb.Message.getWrapperField(this, proto.ordermanager.Report, 2));
};


/**
 * @param {?proto.ordermanager.Report|undefined} value
 * @return {!proto.ordermanager.ReportReply} returns this
*/
proto.ordermanager.ReportReply.prototype.setYesterday = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ordermanager.ReportReply} returns this
 */
proto.ordermanager.ReportReply.prototype.clearYesterday = function() {
  return this.setYesterday(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ordermanager.ReportReply.prototype.hasYesterday = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.ordermanager);
