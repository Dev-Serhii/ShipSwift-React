// source: product_manager.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.productmanager.AddImageReply', null, global);
goog.exportSymbol('proto.productmanager.AddImageRequest', null, global);
goog.exportSymbol('proto.productmanager.AddProductReply', null, global);
goog.exportSymbol('proto.productmanager.AddProductRequest', null, global);
goog.exportSymbol('proto.productmanager.ChangeImagesOrderReply', null, global);
goog.exportSymbol('proto.productmanager.ChangeImagesOrderRequest', null, global);
goog.exportSymbol('proto.productmanager.DeleteImageReply', null, global);
goog.exportSymbol('proto.productmanager.DeleteImageRequest', null, global);
goog.exportSymbol('proto.productmanager.EditProductReply', null, global);
goog.exportSymbol('proto.productmanager.EditProductRequest', null, global);
goog.exportSymbol('proto.productmanager.GetAllProductsReply', null, global);
goog.exportSymbol('proto.productmanager.GetAllProductsRequest', null, global);
goog.exportSymbol('proto.productmanager.GetAllStoreProductsReply', null, global);
goog.exportSymbol('proto.productmanager.GetAllStoreProductsRequest', null, global);
goog.exportSymbol('proto.productmanager.ImageInfo', null, global);
goog.exportSymbol('proto.productmanager.IntGetProductForStoreProductReply', null, global);
goog.exportSymbol('proto.productmanager.IntGetProductForStoreProductRequest', null, global);
goog.exportSymbol('proto.productmanager.IntUpdateAllocatedStockReply', null, global);
goog.exportSymbol('proto.productmanager.IntUpdateAllocatedStockRequest', null, global);
goog.exportSymbol('proto.productmanager.IntUpdateStockForCancelledReply', null, global);
goog.exportSymbol('proto.productmanager.IntUpdateStockForCancelledRequest', null, global);
goog.exportSymbol('proto.productmanager.IntUpdateStockForShippedReply', null, global);
goog.exportSymbol('proto.productmanager.IntUpdateStockForShippedRequest', null, global);
goog.exportSymbol('proto.productmanager.IntUpdateStoreProductReply', null, global);
goog.exportSymbol('proto.productmanager.LinkProductReply', null, global);
goog.exportSymbol('proto.productmanager.LinkProductRequest', null, global);
goog.exportSymbol('proto.productmanager.ProductInfo', null, global);
goog.exportSymbol('proto.productmanager.ProductsCountReply', null, global);
goog.exportSymbol('proto.productmanager.ProductsCountRequest', null, global);
goog.exportSymbol('proto.productmanager.ResetStoreProductLastPolledReply', null, global);
goog.exportSymbol('proto.productmanager.ResetStoreProductLastPolledRequest', null, global);
goog.exportSymbol('proto.productmanager.SetProductArchivedReply', null, global);
goog.exportSymbol('proto.productmanager.SetProductArchivedRequest', null, global);
goog.exportSymbol('proto.productmanager.SetStoreProductArchivedReply', null, global);
goog.exportSymbol('proto.productmanager.SetStoreProductArchivedRequest', null, global);
goog.exportSymbol('proto.productmanager.StoreFilter', null, global);
goog.exportSymbol('proto.productmanager.StoreProductDetails', null, global);
goog.exportSymbol('proto.productmanager.StoreProductInfo', null, global);
goog.exportSymbol('proto.productmanager.StoreProductsCountReply', null, global);
goog.exportSymbol('proto.productmanager.StoreProductsCountRequest', null, global);
goog.exportSymbol('proto.productmanager.UnlinkAllStoreProductsFromStoreReply', null, global);
goog.exportSymbol('proto.productmanager.UnlinkAllStoreProductsFromStoreRequest', null, global);
goog.exportSymbol('proto.productmanager.UnlinkStoreProductReply', null, global);
goog.exportSymbol('proto.productmanager.UnlinkStoreProductRequest', null, global);
goog.exportSymbol('proto.productmanager.UpdateStockReply', null, global);
goog.exportSymbol('proto.productmanager.UpdateStockRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.AddProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.productmanager.AddProductRequest.repeatedFields_, null);
};
goog.inherits(proto.productmanager.AddProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.AddProductRequest.displayName = 'proto.productmanager.AddProductRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.AddProductReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.AddProductReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.AddProductReply.displayName = 'proto.productmanager.AddProductReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.LinkProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.LinkProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.LinkProductRequest.displayName = 'proto.productmanager.LinkProductRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.LinkProductReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.LinkProductReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.LinkProductReply.displayName = 'proto.productmanager.LinkProductReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.UnlinkStoreProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.UnlinkStoreProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.UnlinkStoreProductRequest.displayName = 'proto.productmanager.UnlinkStoreProductRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.UnlinkStoreProductReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.UnlinkStoreProductReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.UnlinkStoreProductReply.displayName = 'proto.productmanager.UnlinkStoreProductReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.UnlinkAllStoreProductsFromStoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.UnlinkAllStoreProductsFromStoreRequest.displayName = 'proto.productmanager.UnlinkAllStoreProductsFromStoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.UnlinkAllStoreProductsFromStoreReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.UnlinkAllStoreProductsFromStoreReply.displayName = 'proto.productmanager.UnlinkAllStoreProductsFromStoreReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.EditProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.EditProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.EditProductRequest.displayName = 'proto.productmanager.EditProductRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.EditProductReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.EditProductReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.EditProductReply.displayName = 'proto.productmanager.EditProductReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.SetStoreProductArchivedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.SetStoreProductArchivedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.SetStoreProductArchivedRequest.displayName = 'proto.productmanager.SetStoreProductArchivedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.SetStoreProductArchivedReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.SetStoreProductArchivedReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.SetStoreProductArchivedReply.displayName = 'proto.productmanager.SetStoreProductArchivedReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.SetProductArchivedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.SetProductArchivedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.SetProductArchivedRequest.displayName = 'proto.productmanager.SetProductArchivedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.SetProductArchivedReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.SetProductArchivedReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.SetProductArchivedReply.displayName = 'proto.productmanager.SetProductArchivedReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.ResetStoreProductLastPolledRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.ResetStoreProductLastPolledRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.ResetStoreProductLastPolledRequest.displayName = 'proto.productmanager.ResetStoreProductLastPolledRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.ResetStoreProductLastPolledReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.ResetStoreProductLastPolledReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.ResetStoreProductLastPolledReply.displayName = 'proto.productmanager.ResetStoreProductLastPolledReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.StoreFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.productmanager.StoreFilter.repeatedFields_, null);
};
goog.inherits(proto.productmanager.StoreFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.StoreFilter.displayName = 'proto.productmanager.StoreFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.GetAllProductsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.GetAllProductsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.GetAllProductsRequest.displayName = 'proto.productmanager.GetAllProductsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.ImageInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.ImageInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.ImageInfo.displayName = 'proto.productmanager.ImageInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.StoreProductInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.productmanager.StoreProductInfo.repeatedFields_, null);
};
goog.inherits(proto.productmanager.StoreProductInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.StoreProductInfo.displayName = 'proto.productmanager.StoreProductInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.ProductInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.productmanager.ProductInfo.repeatedFields_, null);
};
goog.inherits(proto.productmanager.ProductInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.ProductInfo.displayName = 'proto.productmanager.ProductInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.GetAllProductsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.productmanager.GetAllProductsReply.repeatedFields_, null);
};
goog.inherits(proto.productmanager.GetAllProductsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.GetAllProductsReply.displayName = 'proto.productmanager.GetAllProductsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.GetAllStoreProductsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.GetAllStoreProductsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.GetAllStoreProductsRequest.displayName = 'proto.productmanager.GetAllStoreProductsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.GetAllStoreProductsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.productmanager.GetAllStoreProductsReply.repeatedFields_, null);
};
goog.inherits(proto.productmanager.GetAllStoreProductsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.GetAllStoreProductsReply.displayName = 'proto.productmanager.GetAllStoreProductsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.ProductsCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.ProductsCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.ProductsCountRequest.displayName = 'proto.productmanager.ProductsCountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.ProductsCountReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.ProductsCountReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.ProductsCountReply.displayName = 'proto.productmanager.ProductsCountReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.StoreProductsCountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.StoreProductsCountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.StoreProductsCountRequest.displayName = 'proto.productmanager.StoreProductsCountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.StoreProductsCountReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.StoreProductsCountReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.StoreProductsCountReply.displayName = 'proto.productmanager.StoreProductsCountReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.StoreProductDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.productmanager.StoreProductDetails.repeatedFields_, null);
};
goog.inherits(proto.productmanager.StoreProductDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.StoreProductDetails.displayName = 'proto.productmanager.StoreProductDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.IntUpdateStoreProductReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.IntUpdateStoreProductReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.IntUpdateStoreProductReply.displayName = 'proto.productmanager.IntUpdateStoreProductReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.AddImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.AddImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.AddImageRequest.displayName = 'proto.productmanager.AddImageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.AddImageReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.AddImageReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.AddImageReply.displayName = 'proto.productmanager.AddImageReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.DeleteImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.DeleteImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.DeleteImageRequest.displayName = 'proto.productmanager.DeleteImageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.DeleteImageReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.DeleteImageReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.DeleteImageReply.displayName = 'proto.productmanager.DeleteImageReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.ChangeImagesOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.productmanager.ChangeImagesOrderRequest.repeatedFields_, null);
};
goog.inherits(proto.productmanager.ChangeImagesOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.ChangeImagesOrderRequest.displayName = 'proto.productmanager.ChangeImagesOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.ChangeImagesOrderReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.ChangeImagesOrderReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.ChangeImagesOrderReply.displayName = 'proto.productmanager.ChangeImagesOrderReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.IntGetProductForStoreProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.IntGetProductForStoreProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.IntGetProductForStoreProductRequest.displayName = 'proto.productmanager.IntGetProductForStoreProductRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.IntGetProductForStoreProductReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.IntGetProductForStoreProductReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.IntGetProductForStoreProductReply.displayName = 'proto.productmanager.IntGetProductForStoreProductReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.UpdateStockRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.UpdateStockRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.UpdateStockRequest.displayName = 'proto.productmanager.UpdateStockRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.UpdateStockReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.UpdateStockReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.UpdateStockReply.displayName = 'proto.productmanager.UpdateStockReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.IntUpdateStockForShippedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.IntUpdateStockForShippedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.IntUpdateStockForShippedRequest.displayName = 'proto.productmanager.IntUpdateStockForShippedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.IntUpdateStockForShippedReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.IntUpdateStockForShippedReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.IntUpdateStockForShippedReply.displayName = 'proto.productmanager.IntUpdateStockForShippedReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.IntUpdateStockForCancelledRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.IntUpdateStockForCancelledRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.IntUpdateStockForCancelledRequest.displayName = 'proto.productmanager.IntUpdateStockForCancelledRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.IntUpdateStockForCancelledReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.IntUpdateStockForCancelledReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.IntUpdateStockForCancelledReply.displayName = 'proto.productmanager.IntUpdateStockForCancelledReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.IntUpdateAllocatedStockRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.IntUpdateAllocatedStockRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.IntUpdateAllocatedStockRequest.displayName = 'proto.productmanager.IntUpdateAllocatedStockRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.productmanager.IntUpdateAllocatedStockReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.productmanager.IntUpdateAllocatedStockReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.productmanager.IntUpdateAllocatedStockReply.displayName = 'proto.productmanager.IntUpdateAllocatedStockReply';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.productmanager.AddProductRequest.repeatedFields_ = [18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.AddProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.AddProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.AddProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.AddProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sku: jspb.Message.getFieldWithDefault(msg, 3, ""),
    price: (f = msg.getPrice()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    url: jspb.Message.getFieldWithDefault(msg, 5, ""),
    barcode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    originCountry: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    height: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    width: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    length: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    weight: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    stockOnHand: jspb.Message.getFieldWithDefault(msg, 13, 0),
    stockAllocated: jspb.Message.getFieldWithDefault(msg, 14, 0),
    customsInfoValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    customsInfoDescription: jspb.Message.getFieldWithDefault(msg, 16, ""),
    customsInfoTariff: jspb.Message.getFieldWithDefault(msg, 17, ""),
    imageUrlsList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
    storeProductSku: jspb.Message.getFieldWithDefault(msg, 19, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.AddProductRequest}
 */
proto.productmanager.AddProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.AddProductRequest;
  return proto.productmanager.AddProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.AddProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.AddProductRequest}
 */
proto.productmanager.AddProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginCountry(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHeight(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWidth(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLength(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWeight(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStockOnHand(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStockAllocated(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCustomsInfoValue(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomsInfoDescription(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomsInfoTariff(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.addImageUrls(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreProductSku(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.AddProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.AddProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.AddProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.AddProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBarcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOriginCountry();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getLength();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getWeight();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getStockOnHand();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getStockAllocated();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getCustomsInfoValue();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getCustomsInfoDescription();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCustomsInfoTariff();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getImageUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      18,
      f
    );
  }
  f = message.getStoreProductSku();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.AddProductRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.productmanager.AddProductRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sku = 3;
 * @return {string}
 */
proto.productmanager.AddProductRequest.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.FloatValue price = 4;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.productmanager.AddProductRequest.prototype.getPrice = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 4));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.productmanager.AddProductRequest} returns this
*/
proto.productmanager.AddProductRequest.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.AddProductRequest.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string url = 5;
 * @return {string}
 */
proto.productmanager.AddProductRequest.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string barcode = 6;
 * @return {string}
 */
proto.productmanager.AddProductRequest.prototype.getBarcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setBarcode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string origin_country = 7;
 * @return {string}
 */
proto.productmanager.AddProductRequest.prototype.getOriginCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setOriginCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.productmanager.AddProductRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional float height = 9;
 * @return {number}
 */
proto.productmanager.AddProductRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setHeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float width = 10;
 * @return {number}
 */
proto.productmanager.AddProductRequest.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setWidth = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float length = 11;
 * @return {number}
 */
proto.productmanager.AddProductRequest.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setLength = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float weight = 12;
 * @return {number}
 */
proto.productmanager.AddProductRequest.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional int32 stock_on_hand = 13;
 * @return {number}
 */
proto.productmanager.AddProductRequest.prototype.getStockOnHand = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setStockOnHand = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 stock_allocated = 14;
 * @return {number}
 */
proto.productmanager.AddProductRequest.prototype.getStockAllocated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setStockAllocated = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional float customs_info_value = 15;
 * @return {number}
 */
proto.productmanager.AddProductRequest.prototype.getCustomsInfoValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setCustomsInfoValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional string customs_info_description = 16;
 * @return {string}
 */
proto.productmanager.AddProductRequest.prototype.getCustomsInfoDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setCustomsInfoDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string customs_info_tariff = 17;
 * @return {string}
 */
proto.productmanager.AddProductRequest.prototype.getCustomsInfoTariff = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setCustomsInfoTariff = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * repeated string image_urls = 18;
 * @return {!Array<string>}
 */
proto.productmanager.AddProductRequest.prototype.getImageUrlsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 18));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setImageUrlsList = function(value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.addImageUrls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.clearImageUrlsList = function() {
  return this.setImageUrlsList([]);
};


/**
 * optional string store_product_sku = 19;
 * @return {string}
 */
proto.productmanager.AddProductRequest.prototype.getStoreProductSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.AddProductRequest} returns this
 */
proto.productmanager.AddProductRequest.prototype.setStoreProductSku = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.AddProductReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.AddProductReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.AddProductReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.AddProductReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.AddProductReply}
 */
proto.productmanager.AddProductReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.AddProductReply;
  return proto.productmanager.AddProductReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.AddProductReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.AddProductReply}
 */
proto.productmanager.AddProductReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.AddProductReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.AddProductReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.AddProductReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.AddProductReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.LinkProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.LinkProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.LinkProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.LinkProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sku: jspb.Message.getFieldWithDefault(msg, 2, ""),
    storeProductSku: jspb.Message.getFieldWithDefault(msg, 3, ""),
    storeProductUrl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.LinkProductRequest}
 */
proto.productmanager.LinkProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.LinkProductRequest;
  return proto.productmanager.LinkProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.LinkProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.LinkProductRequest}
 */
proto.productmanager.LinkProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreProductSku(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreProductUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.LinkProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.LinkProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.LinkProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.LinkProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStoreProductSku();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStoreProductUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.LinkProductRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.LinkProductRequest} returns this
 */
proto.productmanager.LinkProductRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sku = 2;
 * @return {string}
 */
proto.productmanager.LinkProductRequest.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.LinkProductRequest} returns this
 */
proto.productmanager.LinkProductRequest.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string store_product_sku = 3;
 * @return {string}
 */
proto.productmanager.LinkProductRequest.prototype.getStoreProductSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.LinkProductRequest} returns this
 */
proto.productmanager.LinkProductRequest.prototype.setStoreProductSku = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string store_product_url = 4;
 * @return {string}
 */
proto.productmanager.LinkProductRequest.prototype.getStoreProductUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.LinkProductRequest} returns this
 */
proto.productmanager.LinkProductRequest.prototype.setStoreProductUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.LinkProductReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.LinkProductReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.LinkProductReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.LinkProductReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.LinkProductReply}
 */
proto.productmanager.LinkProductReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.LinkProductReply;
  return proto.productmanager.LinkProductReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.LinkProductReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.LinkProductReply}
 */
proto.productmanager.LinkProductReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.LinkProductReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.LinkProductReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.LinkProductReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.LinkProductReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.UnlinkStoreProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.UnlinkStoreProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.UnlinkStoreProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.UnlinkStoreProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storeProductSku: jspb.Message.getFieldWithDefault(msg, 2, ""),
    storeProductUrl: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.UnlinkStoreProductRequest}
 */
proto.productmanager.UnlinkStoreProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.UnlinkStoreProductRequest;
  return proto.productmanager.UnlinkStoreProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.UnlinkStoreProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.UnlinkStoreProductRequest}
 */
proto.productmanager.UnlinkStoreProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreProductSku(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreProductUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.UnlinkStoreProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.UnlinkStoreProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.UnlinkStoreProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.UnlinkStoreProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreProductSku();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStoreProductUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.UnlinkStoreProductRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.UnlinkStoreProductRequest} returns this
 */
proto.productmanager.UnlinkStoreProductRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string store_product_sku = 2;
 * @return {string}
 */
proto.productmanager.UnlinkStoreProductRequest.prototype.getStoreProductSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.UnlinkStoreProductRequest} returns this
 */
proto.productmanager.UnlinkStoreProductRequest.prototype.setStoreProductSku = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string store_product_url = 3;
 * @return {string}
 */
proto.productmanager.UnlinkStoreProductRequest.prototype.getStoreProductUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.UnlinkStoreProductRequest} returns this
 */
proto.productmanager.UnlinkStoreProductRequest.prototype.setStoreProductUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.UnlinkStoreProductReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.UnlinkStoreProductReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.UnlinkStoreProductReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.UnlinkStoreProductReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.UnlinkStoreProductReply}
 */
proto.productmanager.UnlinkStoreProductReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.UnlinkStoreProductReply;
  return proto.productmanager.UnlinkStoreProductReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.UnlinkStoreProductReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.UnlinkStoreProductReply}
 */
proto.productmanager.UnlinkStoreProductReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.UnlinkStoreProductReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.UnlinkStoreProductReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.UnlinkStoreProductReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.UnlinkStoreProductReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.UnlinkAllStoreProductsFromStoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.UnlinkAllStoreProductsFromStoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sku: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.UnlinkAllStoreProductsFromStoreRequest}
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.UnlinkAllStoreProductsFromStoreRequest;
  return proto.productmanager.UnlinkAllStoreProductsFromStoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.UnlinkAllStoreProductsFromStoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.UnlinkAllStoreProductsFromStoreRequest}
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.UnlinkAllStoreProductsFromStoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.UnlinkAllStoreProductsFromStoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.UnlinkAllStoreProductsFromStoreRequest} returns this
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sku = 2;
 * @return {string}
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreRequest.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.UnlinkAllStoreProductsFromStoreRequest} returns this
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreRequest.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.UnlinkAllStoreProductsFromStoreReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.UnlinkAllStoreProductsFromStoreReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.UnlinkAllStoreProductsFromStoreReply}
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.UnlinkAllStoreProductsFromStoreReply;
  return proto.productmanager.UnlinkAllStoreProductsFromStoreReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.UnlinkAllStoreProductsFromStoreReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.UnlinkAllStoreProductsFromStoreReply}
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.UnlinkAllStoreProductsFromStoreReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.UnlinkAllStoreProductsFromStoreReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.UnlinkAllStoreProductsFromStoreReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.EditProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.EditProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.EditProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.EditProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sku: jspb.Message.getFieldWithDefault(msg, 3, ""),
    price: (f = msg.getPrice()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    url: jspb.Message.getFieldWithDefault(msg, 5, ""),
    barcode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    originCountry: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    height: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    width: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    length: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    weight: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    customsInfoValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    customsInfoDescription: jspb.Message.getFieldWithDefault(msg, 16, ""),
    customsInfoTariff: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.EditProductRequest}
 */
proto.productmanager.EditProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.EditProductRequest;
  return proto.productmanager.EditProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.EditProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.EditProductRequest}
 */
proto.productmanager.EditProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginCountry(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHeight(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWidth(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLength(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWeight(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCustomsInfoValue(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomsInfoDescription(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomsInfoTariff(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.EditProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.EditProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.EditProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.EditProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBarcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOriginCountry();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getLength();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getWeight();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getCustomsInfoValue();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getCustomsInfoDescription();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCustomsInfoTariff();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.EditProductRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.productmanager.EditProductRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sku = 3;
 * @return {string}
 */
proto.productmanager.EditProductRequest.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.FloatValue price = 4;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.productmanager.EditProductRequest.prototype.getPrice = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 4));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.productmanager.EditProductRequest} returns this
*/
proto.productmanager.EditProductRequest.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.EditProductRequest.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string url = 5;
 * @return {string}
 */
proto.productmanager.EditProductRequest.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string barcode = 6;
 * @return {string}
 */
proto.productmanager.EditProductRequest.prototype.getBarcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.setBarcode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string origin_country = 7;
 * @return {string}
 */
proto.productmanager.EditProductRequest.prototype.getOriginCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.setOriginCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.productmanager.EditProductRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional float height = 9;
 * @return {number}
 */
proto.productmanager.EditProductRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.setHeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float width = 10;
 * @return {number}
 */
proto.productmanager.EditProductRequest.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.setWidth = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float length = 11;
 * @return {number}
 */
proto.productmanager.EditProductRequest.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.setLength = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float weight = 12;
 * @return {number}
 */
proto.productmanager.EditProductRequest.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.setWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float customs_info_value = 15;
 * @return {number}
 */
proto.productmanager.EditProductRequest.prototype.getCustomsInfoValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.setCustomsInfoValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional string customs_info_description = 16;
 * @return {string}
 */
proto.productmanager.EditProductRequest.prototype.getCustomsInfoDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.setCustomsInfoDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string customs_info_tariff = 17;
 * @return {string}
 */
proto.productmanager.EditProductRequest.prototype.getCustomsInfoTariff = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.EditProductRequest} returns this
 */
proto.productmanager.EditProductRequest.prototype.setCustomsInfoTariff = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.EditProductReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.EditProductReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.EditProductReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.EditProductReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.EditProductReply}
 */
proto.productmanager.EditProductReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.EditProductReply;
  return proto.productmanager.EditProductReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.EditProductReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.EditProductReply}
 */
proto.productmanager.EditProductReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.EditProductReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.EditProductReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.EditProductReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.EditProductReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.SetStoreProductArchivedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.SetStoreProductArchivedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.SetStoreProductArchivedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.SetStoreProductArchivedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storeProductSku: jspb.Message.getFieldWithDefault(msg, 2, ""),
    archived: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.SetStoreProductArchivedRequest}
 */
proto.productmanager.SetStoreProductArchivedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.SetStoreProductArchivedRequest;
  return proto.productmanager.SetStoreProductArchivedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.SetStoreProductArchivedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.SetStoreProductArchivedRequest}
 */
proto.productmanager.SetStoreProductArchivedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreProductSku(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArchived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.SetStoreProductArchivedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.SetStoreProductArchivedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.SetStoreProductArchivedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.SetStoreProductArchivedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreProductSku();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArchived();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.SetStoreProductArchivedRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.SetStoreProductArchivedRequest} returns this
 */
proto.productmanager.SetStoreProductArchivedRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string store_product_sku = 2;
 * @return {string}
 */
proto.productmanager.SetStoreProductArchivedRequest.prototype.getStoreProductSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.SetStoreProductArchivedRequest} returns this
 */
proto.productmanager.SetStoreProductArchivedRequest.prototype.setStoreProductSku = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool archived = 3;
 * @return {boolean}
 */
proto.productmanager.SetStoreProductArchivedRequest.prototype.getArchived = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.productmanager.SetStoreProductArchivedRequest} returns this
 */
proto.productmanager.SetStoreProductArchivedRequest.prototype.setArchived = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.SetStoreProductArchivedReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.SetStoreProductArchivedReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.SetStoreProductArchivedReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.SetStoreProductArchivedReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.SetStoreProductArchivedReply}
 */
proto.productmanager.SetStoreProductArchivedReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.SetStoreProductArchivedReply;
  return proto.productmanager.SetStoreProductArchivedReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.SetStoreProductArchivedReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.SetStoreProductArchivedReply}
 */
proto.productmanager.SetStoreProductArchivedReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.SetStoreProductArchivedReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.SetStoreProductArchivedReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.SetStoreProductArchivedReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.SetStoreProductArchivedReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.SetProductArchivedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.SetProductArchivedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.SetProductArchivedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.SetProductArchivedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productSku: jspb.Message.getFieldWithDefault(msg, 2, ""),
    archived: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.SetProductArchivedRequest}
 */
proto.productmanager.SetProductArchivedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.SetProductArchivedRequest;
  return proto.productmanager.SetProductArchivedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.SetProductArchivedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.SetProductArchivedRequest}
 */
proto.productmanager.SetProductArchivedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductSku(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArchived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.SetProductArchivedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.SetProductArchivedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.SetProductArchivedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.SetProductArchivedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductSku();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArchived();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.SetProductArchivedRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.SetProductArchivedRequest} returns this
 */
proto.productmanager.SetProductArchivedRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string product_sku = 2;
 * @return {string}
 */
proto.productmanager.SetProductArchivedRequest.prototype.getProductSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.SetProductArchivedRequest} returns this
 */
proto.productmanager.SetProductArchivedRequest.prototype.setProductSku = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool archived = 3;
 * @return {boolean}
 */
proto.productmanager.SetProductArchivedRequest.prototype.getArchived = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.productmanager.SetProductArchivedRequest} returns this
 */
proto.productmanager.SetProductArchivedRequest.prototype.setArchived = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.SetProductArchivedReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.SetProductArchivedReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.SetProductArchivedReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.SetProductArchivedReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.SetProductArchivedReply}
 */
proto.productmanager.SetProductArchivedReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.SetProductArchivedReply;
  return proto.productmanager.SetProductArchivedReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.SetProductArchivedReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.SetProductArchivedReply}
 */
proto.productmanager.SetProductArchivedReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.SetProductArchivedReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.SetProductArchivedReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.SetProductArchivedReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.SetProductArchivedReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.ResetStoreProductLastPolledRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.ResetStoreProductLastPolledRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.ResetStoreProductLastPolledRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ResetStoreProductLastPolledRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storeProductSku: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.ResetStoreProductLastPolledRequest}
 */
proto.productmanager.ResetStoreProductLastPolledRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.ResetStoreProductLastPolledRequest;
  return proto.productmanager.ResetStoreProductLastPolledRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.ResetStoreProductLastPolledRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.ResetStoreProductLastPolledRequest}
 */
proto.productmanager.ResetStoreProductLastPolledRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreProductSku(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.ResetStoreProductLastPolledRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.ResetStoreProductLastPolledRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.ResetStoreProductLastPolledRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ResetStoreProductLastPolledRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreProductSku();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.ResetStoreProductLastPolledRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.ResetStoreProductLastPolledRequest} returns this
 */
proto.productmanager.ResetStoreProductLastPolledRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string store_product_sku = 2;
 * @return {string}
 */
proto.productmanager.ResetStoreProductLastPolledRequest.prototype.getStoreProductSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.ResetStoreProductLastPolledRequest} returns this
 */
proto.productmanager.ResetStoreProductLastPolledRequest.prototype.setStoreProductSku = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.ResetStoreProductLastPolledReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.ResetStoreProductLastPolledReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.ResetStoreProductLastPolledReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ResetStoreProductLastPolledReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.ResetStoreProductLastPolledReply}
 */
proto.productmanager.ResetStoreProductLastPolledReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.ResetStoreProductLastPolledReply;
  return proto.productmanager.ResetStoreProductLastPolledReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.ResetStoreProductLastPolledReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.ResetStoreProductLastPolledReply}
 */
proto.productmanager.ResetStoreProductLastPolledReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.ResetStoreProductLastPolledReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.ResetStoreProductLastPolledReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.ResetStoreProductLastPolledReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ResetStoreProductLastPolledReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.productmanager.StoreFilter.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.StoreFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.StoreFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.StoreFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.StoreFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    nameSkuFreeTextSearch: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.StoreFilter}
 */
proto.productmanager.StoreFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.StoreFilter;
  return proto.productmanager.StoreFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.StoreFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.StoreFilter}
 */
proto.productmanager.StoreFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addStoreIds(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNameSkuFreeTextSearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.StoreFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.StoreFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.StoreFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.StoreFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getNameSkuFreeTextSearch();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated string store_ids = 1;
 * @return {!Array<string>}
 */
proto.productmanager.StoreFilter.prototype.getStoreIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.productmanager.StoreFilter} returns this
 */
proto.productmanager.StoreFilter.prototype.setStoreIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.productmanager.StoreFilter} returns this
 */
proto.productmanager.StoreFilter.prototype.addStoreIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.productmanager.StoreFilter} returns this
 */
proto.productmanager.StoreFilter.prototype.clearStoreIdsList = function() {
  return this.setStoreIdsList([]);
};


/**
 * optional string name_sku_free_text_search = 2;
 * @return {string}
 */
proto.productmanager.StoreFilter.prototype.getNameSkuFreeTextSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreFilter} returns this
 */
proto.productmanager.StoreFilter.prototype.setNameSkuFreeTextSearch = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.GetAllProductsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.GetAllProductsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.GetAllProductsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.GetAllProductsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storeFilter: (f = msg.getStoreFilter()) && proto.productmanager.StoreFilter.toObject(includeInstance, f),
    minQuantity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxQuantity: jspb.Message.getFieldWithDefault(msg, 4, 0),
    includeArchived: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    paginationCursor: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.GetAllProductsRequest}
 */
proto.productmanager.GetAllProductsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.GetAllProductsRequest;
  return proto.productmanager.GetAllProductsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.GetAllProductsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.GetAllProductsRequest}
 */
proto.productmanager.GetAllProductsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = new proto.productmanager.StoreFilter;
      reader.readMessage(value,proto.productmanager.StoreFilter.deserializeBinaryFromReader);
      msg.setStoreFilter(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinQuantity(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxQuantity(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeArchived(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaginationCursor(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.GetAllProductsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.GetAllProductsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.GetAllProductsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.GetAllProductsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreFilter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.productmanager.StoreFilter.serializeBinaryToWriter
    );
  }
  f = message.getMinQuantity();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getMaxQuantity();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getIncludeArchived();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getPaginationCursor();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.GetAllProductsRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.GetAllProductsRequest} returns this
 */
proto.productmanager.GetAllProductsRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional StoreFilter store_filter = 2;
 * @return {?proto.productmanager.StoreFilter}
 */
proto.productmanager.GetAllProductsRequest.prototype.getStoreFilter = function() {
  return /** @type{?proto.productmanager.StoreFilter} */ (
    jspb.Message.getWrapperField(this, proto.productmanager.StoreFilter, 2));
};


/**
 * @param {?proto.productmanager.StoreFilter|undefined} value
 * @return {!proto.productmanager.GetAllProductsRequest} returns this
*/
proto.productmanager.GetAllProductsRequest.prototype.setStoreFilter = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.GetAllProductsRequest} returns this
 */
proto.productmanager.GetAllProductsRequest.prototype.clearStoreFilter = function() {
  return this.setStoreFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.GetAllProductsRequest.prototype.hasStoreFilter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 min_quantity = 3;
 * @return {number}
 */
proto.productmanager.GetAllProductsRequest.prototype.getMinQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.GetAllProductsRequest} returns this
 */
proto.productmanager.GetAllProductsRequest.prototype.setMinQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 max_quantity = 4;
 * @return {number}
 */
proto.productmanager.GetAllProductsRequest.prototype.getMaxQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.GetAllProductsRequest} returns this
 */
proto.productmanager.GetAllProductsRequest.prototype.setMaxQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool include_archived = 5;
 * @return {boolean}
 */
proto.productmanager.GetAllProductsRequest.prototype.getIncludeArchived = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.productmanager.GetAllProductsRequest} returns this
 */
proto.productmanager.GetAllProductsRequest.prototype.setIncludeArchived = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string pagination_cursor = 6;
 * @return {string}
 */
proto.productmanager.GetAllProductsRequest.prototype.getPaginationCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.GetAllProductsRequest} returns this
 */
proto.productmanager.GetAllProductsRequest.prototype.setPaginationCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 page_size = 7;
 * @return {number}
 */
proto.productmanager.GetAllProductsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.GetAllProductsRequest} returns this
 */
proto.productmanager.GetAllProductsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.ImageInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.ImageInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.ImageInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ImageInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    url: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.ImageInfo}
 */
proto.productmanager.ImageInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.ImageInfo;
  return proto.productmanager.ImageInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.ImageInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.ImageInfo}
 */
proto.productmanager.ImageInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.ImageInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.ImageInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.ImageInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ImageInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.productmanager.ImageInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.ImageInfo} returns this
 */
proto.productmanager.ImageInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.productmanager.ImageInfo.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.ImageInfo} returns this
 */
proto.productmanager.ImageInfo.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.productmanager.StoreProductInfo.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.StoreProductInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.StoreProductInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.StoreProductInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.StoreProductInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: (f = msg.getPrice()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    url: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sku: jspb.Message.getFieldWithDefault(msg, 5, ""),
    id: jspb.Message.getFieldWithDefault(msg, 6, 0),
    archived: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    isLinked: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    productId: jspb.Message.getFieldWithDefault(msg, 9, 0),
    imagesList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    productSku: jspb.Message.getFieldWithDefault(msg, 11, ""),
    height: (f = msg.getHeight()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    width: (f = msg.getWidth()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    length: (f = msg.getLength()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    costPrice: (f = msg.getCostPrice()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    weight: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
    quantity: jspb.Message.getFieldWithDefault(msg, 17, 0),
    weightUnit: jspb.Message.getFieldWithDefault(msg, 18, ""),
    dimensionUnit: jspb.Message.getFieldWithDefault(msg, 19, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.StoreProductInfo}
 */
proto.productmanager.StoreProductInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.StoreProductInfo;
  return proto.productmanager.StoreProductInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.StoreProductInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.StoreProductInfo}
 */
proto.productmanager.StoreProductInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArchived(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsLinked(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProductId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductSku(value);
      break;
    case 12:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setHeight(value);
      break;
    case 13:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setWidth(value);
      break;
    case 14:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setLength(value);
      break;
    case 15:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setCostPrice(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWeight(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQuantity(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeightUnit(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setDimensionUnit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.StoreProductInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.StoreProductInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.StoreProductInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.StoreProductInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getArchived();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getIsLinked();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getProductId();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getProductSku();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getHeight();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getWidth();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getLength();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getCostPrice();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getWeight();
  if (f !== 0.0) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = message.getWeightUnit();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getDimensionUnit();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
};


/**
 * optional string store_id = 1;
 * @return {string}
 */
proto.productmanager.StoreProductInfo.prototype.getStoreId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.setStoreId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.productmanager.StoreProductInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.FloatValue price = 3;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.productmanager.StoreProductInfo.prototype.getPrice = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 3));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
*/
proto.productmanager.StoreProductInfo.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.StoreProductInfo.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string url = 4;
 * @return {string}
 */
proto.productmanager.StoreProductInfo.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string sku = 5;
 * @return {string}
 */
proto.productmanager.StoreProductInfo.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint64 id = 6;
 * @return {number}
 */
proto.productmanager.StoreProductInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool archived = 7;
 * @return {boolean}
 */
proto.productmanager.StoreProductInfo.prototype.getArchived = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.setArchived = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool is_linked = 8;
 * @return {boolean}
 */
proto.productmanager.StoreProductInfo.prototype.getIsLinked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.setIsLinked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional uint64 product_id = 9;
 * @return {number}
 */
proto.productmanager.StoreProductInfo.prototype.getProductId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.setProductId = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated string images = 10;
 * @return {!Array<string>}
 */
proto.productmanager.StoreProductInfo.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.setImagesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.addImages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.clearImagesList = function() {
  return this.setImagesList([]);
};


/**
 * optional string product_sku = 11;
 * @return {string}
 */
proto.productmanager.StoreProductInfo.prototype.getProductSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.setProductSku = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional google.protobuf.FloatValue height = 12;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.productmanager.StoreProductInfo.prototype.getHeight = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 12));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
*/
proto.productmanager.StoreProductInfo.prototype.setHeight = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.clearHeight = function() {
  return this.setHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.StoreProductInfo.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.FloatValue width = 13;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.productmanager.StoreProductInfo.prototype.getWidth = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 13));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
*/
proto.productmanager.StoreProductInfo.prototype.setWidth = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.clearWidth = function() {
  return this.setWidth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.StoreProductInfo.prototype.hasWidth = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional google.protobuf.FloatValue length = 14;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.productmanager.StoreProductInfo.prototype.getLength = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 14));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
*/
proto.productmanager.StoreProductInfo.prototype.setLength = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.clearLength = function() {
  return this.setLength(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.StoreProductInfo.prototype.hasLength = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional google.protobuf.FloatValue cost_price = 15;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.productmanager.StoreProductInfo.prototype.getCostPrice = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 15));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
*/
proto.productmanager.StoreProductInfo.prototype.setCostPrice = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.clearCostPrice = function() {
  return this.setCostPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.StoreProductInfo.prototype.hasCostPrice = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional float weight = 16;
 * @return {number}
 */
proto.productmanager.StoreProductInfo.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.setWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional uint32 quantity = 17;
 * @return {number}
 */
proto.productmanager.StoreProductInfo.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional string weight_unit = 18;
 * @return {string}
 */
proto.productmanager.StoreProductInfo.prototype.getWeightUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.setWeightUnit = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string dimension_unit = 19;
 * @return {string}
 */
proto.productmanager.StoreProductInfo.prototype.getDimensionUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductInfo} returns this
 */
proto.productmanager.StoreProductInfo.prototype.setDimensionUnit = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.productmanager.ProductInfo.repeatedFields_ = [18,19];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.ProductInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.ProductInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.ProductInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ProductInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sku: jspb.Message.getFieldWithDefault(msg, 3, ""),
    price: (f = msg.getPrice()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    url: jspb.Message.getFieldWithDefault(msg, 5, ""),
    barcode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    originCountry: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    height: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    width: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    length: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    weight: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    stockOnHand: jspb.Message.getFieldWithDefault(msg, 13, 0),
    stockAllocated: jspb.Message.getFieldWithDefault(msg, 14, 0),
    customsInfoValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    customsInfoDescription: jspb.Message.getFieldWithDefault(msg, 16, ""),
    customsInfoTariff: jspb.Message.getFieldWithDefault(msg, 17, ""),
    imagesList: jspb.Message.toObjectList(msg.getImagesList(),
    proto.productmanager.ImageInfo.toObject, includeInstance),
    storeProductsList: jspb.Message.toObjectList(msg.getStoreProductsList(),
    proto.productmanager.StoreProductInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.ProductInfo}
 */
proto.productmanager.ProductInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.ProductInfo;
  return proto.productmanager.ProductInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.ProductInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.ProductInfo}
 */
proto.productmanager.ProductInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginCountry(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHeight(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWidth(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLength(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWeight(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStockOnHand(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStockAllocated(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCustomsInfoValue(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomsInfoDescription(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomsInfoTariff(value);
      break;
    case 18:
      var value = new proto.productmanager.ImageInfo;
      reader.readMessage(value,proto.productmanager.ImageInfo.deserializeBinaryFromReader);
      msg.addImages(value);
      break;
    case 19:
      var value = new proto.productmanager.StoreProductInfo;
      reader.readMessage(value,proto.productmanager.StoreProductInfo.deserializeBinaryFromReader);
      msg.addStoreProducts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.ProductInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.ProductInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.ProductInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ProductInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBarcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOriginCountry();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getLength();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = message.getWeight();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getStockOnHand();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getStockAllocated();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getCustomsInfoValue();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getCustomsInfoDescription();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCustomsInfoTariff();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.productmanager.ImageInfo.serializeBinaryToWriter
    );
  }
  f = message.getStoreProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      19,
      f,
      proto.productmanager.StoreProductInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.productmanager.ProductInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.productmanager.ProductInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sku = 3;
 * @return {string}
 */
proto.productmanager.ProductInfo.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.FloatValue price = 4;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.productmanager.ProductInfo.prototype.getPrice = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 4));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.productmanager.ProductInfo} returns this
*/
proto.productmanager.ProductInfo.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.ProductInfo.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string url = 5;
 * @return {string}
 */
proto.productmanager.ProductInfo.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string barcode = 6;
 * @return {string}
 */
proto.productmanager.ProductInfo.prototype.getBarcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setBarcode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string origin_country = 7;
 * @return {string}
 */
proto.productmanager.ProductInfo.prototype.getOriginCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setOriginCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.productmanager.ProductInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional float height = 9;
 * @return {number}
 */
proto.productmanager.ProductInfo.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setHeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float width = 10;
 * @return {number}
 */
proto.productmanager.ProductInfo.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setWidth = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float length = 11;
 * @return {number}
 */
proto.productmanager.ProductInfo.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setLength = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional float weight = 12;
 * @return {number}
 */
proto.productmanager.ProductInfo.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional int32 stock_on_hand = 13;
 * @return {number}
 */
proto.productmanager.ProductInfo.prototype.getStockOnHand = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setStockOnHand = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 stock_allocated = 14;
 * @return {number}
 */
proto.productmanager.ProductInfo.prototype.getStockAllocated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setStockAllocated = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional float customs_info_value = 15;
 * @return {number}
 */
proto.productmanager.ProductInfo.prototype.getCustomsInfoValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setCustomsInfoValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional string customs_info_description = 16;
 * @return {string}
 */
proto.productmanager.ProductInfo.prototype.getCustomsInfoDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setCustomsInfoDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string customs_info_tariff = 17;
 * @return {string}
 */
proto.productmanager.ProductInfo.prototype.getCustomsInfoTariff = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.setCustomsInfoTariff = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * repeated ImageInfo images = 18;
 * @return {!Array<!proto.productmanager.ImageInfo>}
 */
proto.productmanager.ProductInfo.prototype.getImagesList = function() {
  return /** @type{!Array<!proto.productmanager.ImageInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.productmanager.ImageInfo, 18));
};


/**
 * @param {!Array<!proto.productmanager.ImageInfo>} value
 * @return {!proto.productmanager.ProductInfo} returns this
*/
proto.productmanager.ProductInfo.prototype.setImagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.productmanager.ImageInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.productmanager.ImageInfo}
 */
proto.productmanager.ProductInfo.prototype.addImages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.productmanager.ImageInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.clearImagesList = function() {
  return this.setImagesList([]);
};


/**
 * repeated StoreProductInfo store_products = 19;
 * @return {!Array<!proto.productmanager.StoreProductInfo>}
 */
proto.productmanager.ProductInfo.prototype.getStoreProductsList = function() {
  return /** @type{!Array<!proto.productmanager.StoreProductInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.productmanager.StoreProductInfo, 19));
};


/**
 * @param {!Array<!proto.productmanager.StoreProductInfo>} value
 * @return {!proto.productmanager.ProductInfo} returns this
*/
proto.productmanager.ProductInfo.prototype.setStoreProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 19, value);
};


/**
 * @param {!proto.productmanager.StoreProductInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.productmanager.StoreProductInfo}
 */
proto.productmanager.ProductInfo.prototype.addStoreProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.productmanager.StoreProductInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.productmanager.ProductInfo} returns this
 */
proto.productmanager.ProductInfo.prototype.clearStoreProductsList = function() {
  return this.setStoreProductsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.productmanager.GetAllProductsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.GetAllProductsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.GetAllProductsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.GetAllProductsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.GetAllProductsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.productmanager.ProductInfo.toObject, includeInstance),
    nextPageCursor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.GetAllProductsReply}
 */
proto.productmanager.GetAllProductsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.GetAllProductsReply;
  return proto.productmanager.GetAllProductsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.GetAllProductsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.GetAllProductsReply}
 */
proto.productmanager.GetAllProductsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.productmanager.ProductInfo;
      reader.readMessage(value,proto.productmanager.ProductInfo.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageCursor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.GetAllProductsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.GetAllProductsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.GetAllProductsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.GetAllProductsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.productmanager.ProductInfo.serializeBinaryToWriter
    );
  }
  f = message.getNextPageCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * repeated ProductInfo products = 1;
 * @return {!Array<!proto.productmanager.ProductInfo>}
 */
proto.productmanager.GetAllProductsReply.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.productmanager.ProductInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.productmanager.ProductInfo, 1));
};


/**
 * @param {!Array<!proto.productmanager.ProductInfo>} value
 * @return {!proto.productmanager.GetAllProductsReply} returns this
*/
proto.productmanager.GetAllProductsReply.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.productmanager.ProductInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.productmanager.ProductInfo}
 */
proto.productmanager.GetAllProductsReply.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.productmanager.ProductInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.productmanager.GetAllProductsReply} returns this
 */
proto.productmanager.GetAllProductsReply.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};


/**
 * optional string next_page_cursor = 2;
 * @return {string}
 */
proto.productmanager.GetAllProductsReply.prototype.getNextPageCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.GetAllProductsReply} returns this
 */
proto.productmanager.GetAllProductsReply.prototype.setNextPageCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 page_size = 3;
 * @return {number}
 */
proto.productmanager.GetAllProductsReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.GetAllProductsReply} returns this
 */
proto.productmanager.GetAllProductsReply.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.GetAllStoreProductsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.GetAllStoreProductsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.GetAllStoreProductsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storeFilter: (f = msg.getStoreFilter()) && proto.productmanager.StoreFilter.toObject(includeInstance, f),
    includeArchived: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    linkedOnly: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    unlinkedOnly: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    paginationCursor: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.GetAllStoreProductsRequest}
 */
proto.productmanager.GetAllStoreProductsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.GetAllStoreProductsRequest;
  return proto.productmanager.GetAllStoreProductsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.GetAllStoreProductsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.GetAllStoreProductsRequest}
 */
proto.productmanager.GetAllStoreProductsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = new proto.productmanager.StoreFilter;
      reader.readMessage(value,proto.productmanager.StoreFilter.deserializeBinaryFromReader);
      msg.setStoreFilter(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeArchived(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLinkedOnly(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnlinkedOnly(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaginationCursor(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.GetAllStoreProductsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.GetAllStoreProductsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.GetAllStoreProductsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreFilter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.productmanager.StoreFilter.serializeBinaryToWriter
    );
  }
  f = message.getIncludeArchived();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLinkedOnly();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getUnlinkedOnly();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getPaginationCursor();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.GetAllStoreProductsRequest} returns this
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional StoreFilter store_filter = 2;
 * @return {?proto.productmanager.StoreFilter}
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.getStoreFilter = function() {
  return /** @type{?proto.productmanager.StoreFilter} */ (
    jspb.Message.getWrapperField(this, proto.productmanager.StoreFilter, 2));
};


/**
 * @param {?proto.productmanager.StoreFilter|undefined} value
 * @return {!proto.productmanager.GetAllStoreProductsRequest} returns this
*/
proto.productmanager.GetAllStoreProductsRequest.prototype.setStoreFilter = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.GetAllStoreProductsRequest} returns this
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.clearStoreFilter = function() {
  return this.setStoreFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.hasStoreFilter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool include_archived = 3;
 * @return {boolean}
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.getIncludeArchived = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.productmanager.GetAllStoreProductsRequest} returns this
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.setIncludeArchived = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool linked_only = 4;
 * @return {boolean}
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.getLinkedOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.productmanager.GetAllStoreProductsRequest} returns this
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.setLinkedOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool unlinked_only = 5;
 * @return {boolean}
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.getUnlinkedOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.productmanager.GetAllStoreProductsRequest} returns this
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.setUnlinkedOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string pagination_cursor = 6;
 * @return {string}
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.getPaginationCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.GetAllStoreProductsRequest} returns this
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.setPaginationCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 page_size = 7;
 * @return {number}
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.GetAllStoreProductsRequest} returns this
 */
proto.productmanager.GetAllStoreProductsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.productmanager.GetAllStoreProductsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.GetAllStoreProductsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.GetAllStoreProductsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.GetAllStoreProductsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.GetAllStoreProductsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeProductsList: jspb.Message.toObjectList(msg.getStoreProductsList(),
    proto.productmanager.StoreProductInfo.toObject, includeInstance),
    nextPageCursor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.GetAllStoreProductsReply}
 */
proto.productmanager.GetAllStoreProductsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.GetAllStoreProductsReply;
  return proto.productmanager.GetAllStoreProductsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.GetAllStoreProductsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.GetAllStoreProductsReply}
 */
proto.productmanager.GetAllStoreProductsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.productmanager.StoreProductInfo;
      reader.readMessage(value,proto.productmanager.StoreProductInfo.deserializeBinaryFromReader);
      msg.addStoreProducts(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageCursor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.GetAllStoreProductsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.GetAllStoreProductsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.GetAllStoreProductsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.GetAllStoreProductsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.productmanager.StoreProductInfo.serializeBinaryToWriter
    );
  }
  f = message.getNextPageCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * repeated StoreProductInfo store_products = 1;
 * @return {!Array<!proto.productmanager.StoreProductInfo>}
 */
proto.productmanager.GetAllStoreProductsReply.prototype.getStoreProductsList = function() {
  return /** @type{!Array<!proto.productmanager.StoreProductInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.productmanager.StoreProductInfo, 1));
};


/**
 * @param {!Array<!proto.productmanager.StoreProductInfo>} value
 * @return {!proto.productmanager.GetAllStoreProductsReply} returns this
*/
proto.productmanager.GetAllStoreProductsReply.prototype.setStoreProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.productmanager.StoreProductInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.productmanager.StoreProductInfo}
 */
proto.productmanager.GetAllStoreProductsReply.prototype.addStoreProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.productmanager.StoreProductInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.productmanager.GetAllStoreProductsReply} returns this
 */
proto.productmanager.GetAllStoreProductsReply.prototype.clearStoreProductsList = function() {
  return this.setStoreProductsList([]);
};


/**
 * optional string next_page_cursor = 2;
 * @return {string}
 */
proto.productmanager.GetAllStoreProductsReply.prototype.getNextPageCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.GetAllStoreProductsReply} returns this
 */
proto.productmanager.GetAllStoreProductsReply.prototype.setNextPageCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 page_size = 3;
 * @return {number}
 */
proto.productmanager.GetAllStoreProductsReply.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.GetAllStoreProductsReply} returns this
 */
proto.productmanager.GetAllStoreProductsReply.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.ProductsCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.ProductsCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.ProductsCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ProductsCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storeFilter: (f = msg.getStoreFilter()) && proto.productmanager.StoreFilter.toObject(includeInstance, f),
    minQuantity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxQuantity: jspb.Message.getFieldWithDefault(msg, 4, 0),
    includeArchived: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.ProductsCountRequest}
 */
proto.productmanager.ProductsCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.ProductsCountRequest;
  return proto.productmanager.ProductsCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.ProductsCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.ProductsCountRequest}
 */
proto.productmanager.ProductsCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = new proto.productmanager.StoreFilter;
      reader.readMessage(value,proto.productmanager.StoreFilter.deserializeBinaryFromReader);
      msg.setStoreFilter(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinQuantity(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxQuantity(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeArchived(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.ProductsCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.ProductsCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.ProductsCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ProductsCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreFilter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.productmanager.StoreFilter.serializeBinaryToWriter
    );
  }
  f = message.getMinQuantity();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getMaxQuantity();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getIncludeArchived();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.ProductsCountRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.ProductsCountRequest} returns this
 */
proto.productmanager.ProductsCountRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional StoreFilter store_filter = 2;
 * @return {?proto.productmanager.StoreFilter}
 */
proto.productmanager.ProductsCountRequest.prototype.getStoreFilter = function() {
  return /** @type{?proto.productmanager.StoreFilter} */ (
    jspb.Message.getWrapperField(this, proto.productmanager.StoreFilter, 2));
};


/**
 * @param {?proto.productmanager.StoreFilter|undefined} value
 * @return {!proto.productmanager.ProductsCountRequest} returns this
*/
proto.productmanager.ProductsCountRequest.prototype.setStoreFilter = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.ProductsCountRequest} returns this
 */
proto.productmanager.ProductsCountRequest.prototype.clearStoreFilter = function() {
  return this.setStoreFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.ProductsCountRequest.prototype.hasStoreFilter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 min_quantity = 3;
 * @return {number}
 */
proto.productmanager.ProductsCountRequest.prototype.getMinQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.ProductsCountRequest} returns this
 */
proto.productmanager.ProductsCountRequest.prototype.setMinQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 max_quantity = 4;
 * @return {number}
 */
proto.productmanager.ProductsCountRequest.prototype.getMaxQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.ProductsCountRequest} returns this
 */
proto.productmanager.ProductsCountRequest.prototype.setMaxQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool include_archived = 5;
 * @return {boolean}
 */
proto.productmanager.ProductsCountRequest.prototype.getIncludeArchived = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.productmanager.ProductsCountRequest} returns this
 */
proto.productmanager.ProductsCountRequest.prototype.setIncludeArchived = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.ProductsCountReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.ProductsCountReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.ProductsCountReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ProductsCountReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.ProductsCountReply}
 */
proto.productmanager.ProductsCountReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.ProductsCountReply;
  return proto.productmanager.ProductsCountReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.ProductsCountReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.ProductsCountReply}
 */
proto.productmanager.ProductsCountReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.ProductsCountReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.ProductsCountReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.ProductsCountReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ProductsCountReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.productmanager.ProductsCountReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.ProductsCountReply} returns this
 */
proto.productmanager.ProductsCountReply.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.StoreProductsCountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.StoreProductsCountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.StoreProductsCountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.StoreProductsCountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storeFilter: (f = msg.getStoreFilter()) && proto.productmanager.StoreFilter.toObject(includeInstance, f),
    includeArchived: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    linkedOnly: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    unlinkedOnly: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.StoreProductsCountRequest}
 */
proto.productmanager.StoreProductsCountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.StoreProductsCountRequest;
  return proto.productmanager.StoreProductsCountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.StoreProductsCountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.StoreProductsCountRequest}
 */
proto.productmanager.StoreProductsCountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = new proto.productmanager.StoreFilter;
      reader.readMessage(value,proto.productmanager.StoreFilter.deserializeBinaryFromReader);
      msg.setStoreFilter(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeArchived(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLinkedOnly(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnlinkedOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.StoreProductsCountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.StoreProductsCountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.StoreProductsCountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.StoreProductsCountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreFilter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.productmanager.StoreFilter.serializeBinaryToWriter
    );
  }
  f = message.getIncludeArchived();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLinkedOnly();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getUnlinkedOnly();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.StoreProductsCountRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductsCountRequest} returns this
 */
proto.productmanager.StoreProductsCountRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional StoreFilter store_filter = 2;
 * @return {?proto.productmanager.StoreFilter}
 */
proto.productmanager.StoreProductsCountRequest.prototype.getStoreFilter = function() {
  return /** @type{?proto.productmanager.StoreFilter} */ (
    jspb.Message.getWrapperField(this, proto.productmanager.StoreFilter, 2));
};


/**
 * @param {?proto.productmanager.StoreFilter|undefined} value
 * @return {!proto.productmanager.StoreProductsCountRequest} returns this
*/
proto.productmanager.StoreProductsCountRequest.prototype.setStoreFilter = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.StoreProductsCountRequest} returns this
 */
proto.productmanager.StoreProductsCountRequest.prototype.clearStoreFilter = function() {
  return this.setStoreFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.StoreProductsCountRequest.prototype.hasStoreFilter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool include_archived = 3;
 * @return {boolean}
 */
proto.productmanager.StoreProductsCountRequest.prototype.getIncludeArchived = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.productmanager.StoreProductsCountRequest} returns this
 */
proto.productmanager.StoreProductsCountRequest.prototype.setIncludeArchived = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool linked_only = 4;
 * @return {boolean}
 */
proto.productmanager.StoreProductsCountRequest.prototype.getLinkedOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.productmanager.StoreProductsCountRequest} returns this
 */
proto.productmanager.StoreProductsCountRequest.prototype.setLinkedOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool unlinked_only = 5;
 * @return {boolean}
 */
proto.productmanager.StoreProductsCountRequest.prototype.getUnlinkedOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.productmanager.StoreProductsCountRequest} returns this
 */
proto.productmanager.StoreProductsCountRequest.prototype.setUnlinkedOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.StoreProductsCountReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.StoreProductsCountReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.StoreProductsCountReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.StoreProductsCountReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.StoreProductsCountReply}
 */
proto.productmanager.StoreProductsCountReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.StoreProductsCountReply;
  return proto.productmanager.StoreProductsCountReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.StoreProductsCountReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.StoreProductsCountReply}
 */
proto.productmanager.StoreProductsCountReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.StoreProductsCountReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.StoreProductsCountReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.StoreProductsCountReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.StoreProductsCountReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.productmanager.StoreProductsCountReply.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.StoreProductsCountReply} returns this
 */
proto.productmanager.StoreProductsCountReply.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.productmanager.StoreProductDetails.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.StoreProductDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.StoreProductDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.StoreProductDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.StoreProductDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    api2cartId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sku: jspb.Message.getFieldWithDefault(msg, 5, ""),
    price: (f = msg.getPrice()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    url: jspb.Message.getFieldWithDefault(msg, 7, ""),
    imagesList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    shopifyProductId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    inventoryItemId: (f = msg.getInventoryItemId()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    height: (f = msg.getHeight()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    width: (f = msg.getWidth()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    length: (f = msg.getLength()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    costPrice: (f = msg.getCostPrice()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    weight: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    quantity: jspb.Message.getFieldWithDefault(msg, 16, 0),
    weightUnit: jspb.Message.getFieldWithDefault(msg, 17, ""),
    dimensionUnit: jspb.Message.getFieldWithDefault(msg, 18, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.StoreProductDetails}
 */
proto.productmanager.StoreProductDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.StoreProductDetails;
  return proto.productmanager.StoreProductDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.StoreProductDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.StoreProductDetails}
 */
proto.productmanager.StoreProductDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApi2cartId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 6:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addImages(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setShopifyProductId(value);
      break;
    case 10:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setInventoryItemId(value);
      break;
    case 11:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setHeight(value);
      break;
    case 12:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setWidth(value);
      break;
    case 13:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setLength(value);
      break;
    case 14:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setCostPrice(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWeight(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQuantity(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeightUnit(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setDimensionUnit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.StoreProductDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.StoreProductDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.StoreProductDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.StoreProductDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getApi2cartId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getShopifyProductId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getInventoryItemId();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getHeight();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getWidth();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getLength();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getCostPrice();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getWeight();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = message.getWeightUnit();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getDimensionUnit();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.StoreProductDetails.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string store_id = 2;
 * @return {string}
 */
proto.productmanager.StoreProductDetails.prototype.getStoreId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.setStoreId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string api2cart_id = 3;
 * @return {string}
 */
proto.productmanager.StoreProductDetails.prototype.getApi2cartId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.setApi2cartId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.productmanager.StoreProductDetails.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string sku = 5;
 * @return {string}
 */
proto.productmanager.StoreProductDetails.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.FloatValue price = 6;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.productmanager.StoreProductDetails.prototype.getPrice = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 6));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
*/
proto.productmanager.StoreProductDetails.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.StoreProductDetails.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string url = 7;
 * @return {string}
 */
proto.productmanager.StoreProductDetails.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string images = 8;
 * @return {!Array<string>}
 */
proto.productmanager.StoreProductDetails.prototype.getImagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.setImagesList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.addImages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.clearImagesList = function() {
  return this.setImagesList([]);
};


/**
 * optional string shopify_product_id = 9;
 * @return {string}
 */
proto.productmanager.StoreProductDetails.prototype.getShopifyProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.setShopifyProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional google.protobuf.Int64Value inventory_item_id = 10;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.productmanager.StoreProductDetails.prototype.getInventoryItemId = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 10));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
*/
proto.productmanager.StoreProductDetails.prototype.setInventoryItemId = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.clearInventoryItemId = function() {
  return this.setInventoryItemId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.StoreProductDetails.prototype.hasInventoryItemId = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.FloatValue height = 11;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.productmanager.StoreProductDetails.prototype.getHeight = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 11));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
*/
proto.productmanager.StoreProductDetails.prototype.setHeight = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.clearHeight = function() {
  return this.setHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.StoreProductDetails.prototype.hasHeight = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.FloatValue width = 12;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.productmanager.StoreProductDetails.prototype.getWidth = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 12));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
*/
proto.productmanager.StoreProductDetails.prototype.setWidth = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.clearWidth = function() {
  return this.setWidth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.StoreProductDetails.prototype.hasWidth = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.FloatValue length = 13;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.productmanager.StoreProductDetails.prototype.getLength = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 13));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
*/
proto.productmanager.StoreProductDetails.prototype.setLength = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.clearLength = function() {
  return this.setLength(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.StoreProductDetails.prototype.hasLength = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional google.protobuf.FloatValue cost_price = 14;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.productmanager.StoreProductDetails.prototype.getCostPrice = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 14));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
*/
proto.productmanager.StoreProductDetails.prototype.setCostPrice = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.clearCostPrice = function() {
  return this.setCostPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.StoreProductDetails.prototype.hasCostPrice = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional float weight = 15;
 * @return {number}
 */
proto.productmanager.StoreProductDetails.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.setWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional uint32 quantity = 16;
 * @return {number}
 */
proto.productmanager.StoreProductDetails.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional string weight_unit = 17;
 * @return {string}
 */
proto.productmanager.StoreProductDetails.prototype.getWeightUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.setWeightUnit = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string dimension_unit = 18;
 * @return {string}
 */
proto.productmanager.StoreProductDetails.prototype.getDimensionUnit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.StoreProductDetails} returns this
 */
proto.productmanager.StoreProductDetails.prototype.setDimensionUnit = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.IntUpdateStoreProductReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.IntUpdateStoreProductReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.IntUpdateStoreProductReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntUpdateStoreProductReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.IntUpdateStoreProductReply}
 */
proto.productmanager.IntUpdateStoreProductReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.IntUpdateStoreProductReply;
  return proto.productmanager.IntUpdateStoreProductReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.IntUpdateStoreProductReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.IntUpdateStoreProductReply}
 */
proto.productmanager.IntUpdateStoreProductReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.IntUpdateStoreProductReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.IntUpdateStoreProductReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.IntUpdateStoreProductReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntUpdateStoreProductReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.AddImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.AddImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.AddImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.AddImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productSku: jspb.Message.getFieldWithDefault(msg, 2, ""),
    url: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.AddImageRequest}
 */
proto.productmanager.AddImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.AddImageRequest;
  return proto.productmanager.AddImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.AddImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.AddImageRequest}
 */
proto.productmanager.AddImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductSku(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.AddImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.AddImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.AddImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.AddImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductSku();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.AddImageRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.AddImageRequest} returns this
 */
proto.productmanager.AddImageRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string product_sku = 2;
 * @return {string}
 */
proto.productmanager.AddImageRequest.prototype.getProductSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.AddImageRequest} returns this
 */
proto.productmanager.AddImageRequest.prototype.setProductSku = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.productmanager.AddImageRequest.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.AddImageRequest} returns this
 */
proto.productmanager.AddImageRequest.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.AddImageReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.AddImageReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.AddImageReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.AddImageReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.AddImageReply}
 */
proto.productmanager.AddImageReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.AddImageReply;
  return proto.productmanager.AddImageReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.AddImageReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.AddImageReply}
 */
proto.productmanager.AddImageReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.AddImageReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.AddImageReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.AddImageReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.AddImageReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.DeleteImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.DeleteImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.DeleteImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.DeleteImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productSku: jspb.Message.getFieldWithDefault(msg, 2, ""),
    imageId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.DeleteImageRequest}
 */
proto.productmanager.DeleteImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.DeleteImageRequest;
  return proto.productmanager.DeleteImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.DeleteImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.DeleteImageRequest}
 */
proto.productmanager.DeleteImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductSku(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setImageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.DeleteImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.DeleteImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.DeleteImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.DeleteImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductSku();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImageId();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.DeleteImageRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.DeleteImageRequest} returns this
 */
proto.productmanager.DeleteImageRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string product_sku = 2;
 * @return {string}
 */
proto.productmanager.DeleteImageRequest.prototype.getProductSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.DeleteImageRequest} returns this
 */
proto.productmanager.DeleteImageRequest.prototype.setProductSku = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 image_id = 3;
 * @return {number}
 */
proto.productmanager.DeleteImageRequest.prototype.getImageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.DeleteImageRequest} returns this
 */
proto.productmanager.DeleteImageRequest.prototype.setImageId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.DeleteImageReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.DeleteImageReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.DeleteImageReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.DeleteImageReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.DeleteImageReply}
 */
proto.productmanager.DeleteImageReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.DeleteImageReply;
  return proto.productmanager.DeleteImageReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.DeleteImageReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.DeleteImageReply}
 */
proto.productmanager.DeleteImageReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.DeleteImageReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.DeleteImageReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.DeleteImageReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.DeleteImageReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.productmanager.ChangeImagesOrderRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.ChangeImagesOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.ChangeImagesOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.ChangeImagesOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ChangeImagesOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productSku: jspb.Message.getFieldWithDefault(msg, 2, ""),
    imageIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.ChangeImagesOrderRequest}
 */
proto.productmanager.ChangeImagesOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.ChangeImagesOrderRequest;
  return proto.productmanager.ChangeImagesOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.ChangeImagesOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.ChangeImagesOrderRequest}
 */
proto.productmanager.ChangeImagesOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductSku(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addImageIds(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.ChangeImagesOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.ChangeImagesOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.ChangeImagesOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ChangeImagesOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductSku();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImageIdsList();
  if (f.length > 0) {
    writer.writePackedUint64(
      3,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.ChangeImagesOrderRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.ChangeImagesOrderRequest} returns this
 */
proto.productmanager.ChangeImagesOrderRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string product_sku = 2;
 * @return {string}
 */
proto.productmanager.ChangeImagesOrderRequest.prototype.getProductSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.ChangeImagesOrderRequest} returns this
 */
proto.productmanager.ChangeImagesOrderRequest.prototype.setProductSku = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated uint64 image_ids = 3;
 * @return {!Array<number>}
 */
proto.productmanager.ChangeImagesOrderRequest.prototype.getImageIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.productmanager.ChangeImagesOrderRequest} returns this
 */
proto.productmanager.ChangeImagesOrderRequest.prototype.setImageIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.productmanager.ChangeImagesOrderRequest} returns this
 */
proto.productmanager.ChangeImagesOrderRequest.prototype.addImageIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.productmanager.ChangeImagesOrderRequest} returns this
 */
proto.productmanager.ChangeImagesOrderRequest.prototype.clearImageIdsList = function() {
  return this.setImageIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.ChangeImagesOrderReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.ChangeImagesOrderReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.ChangeImagesOrderReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ChangeImagesOrderReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.ChangeImagesOrderReply}
 */
proto.productmanager.ChangeImagesOrderReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.ChangeImagesOrderReply;
  return proto.productmanager.ChangeImagesOrderReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.ChangeImagesOrderReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.ChangeImagesOrderReply}
 */
proto.productmanager.ChangeImagesOrderReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.ChangeImagesOrderReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.ChangeImagesOrderReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.ChangeImagesOrderReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.ChangeImagesOrderReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.IntGetProductForStoreProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.IntGetProductForStoreProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.IntGetProductForStoreProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntGetProductForStoreProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    storeId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    productSku: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.IntGetProductForStoreProductRequest}
 */
proto.productmanager.IntGetProductForStoreProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.IntGetProductForStoreProductRequest;
  return proto.productmanager.IntGetProductForStoreProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.IntGetProductForStoreProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.IntGetProductForStoreProductRequest}
 */
proto.productmanager.IntGetProductForStoreProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductSku(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.IntGetProductForStoreProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.IntGetProductForStoreProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.IntGetProductForStoreProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntGetProductForStoreProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStoreId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProductSku();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.IntGetProductForStoreProductRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.IntGetProductForStoreProductRequest} returns this
 */
proto.productmanager.IntGetProductForStoreProductRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string store_id = 2;
 * @return {string}
 */
proto.productmanager.IntGetProductForStoreProductRequest.prototype.getStoreId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.IntGetProductForStoreProductRequest} returns this
 */
proto.productmanager.IntGetProductForStoreProductRequest.prototype.setStoreId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string product_sku = 3;
 * @return {string}
 */
proto.productmanager.IntGetProductForStoreProductRequest.prototype.getProductSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.IntGetProductForStoreProductRequest} returns this
 */
proto.productmanager.IntGetProductForStoreProductRequest.prototype.setProductSku = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.IntGetProductForStoreProductReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.IntGetProductForStoreProductReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.IntGetProductForStoreProductReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntGetProductForStoreProductReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    product: (f = msg.getProduct()) && proto.productmanager.ProductInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.IntGetProductForStoreProductReply}
 */
proto.productmanager.IntGetProductForStoreProductReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.IntGetProductForStoreProductReply;
  return proto.productmanager.IntGetProductForStoreProductReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.IntGetProductForStoreProductReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.IntGetProductForStoreProductReply}
 */
proto.productmanager.IntGetProductForStoreProductReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.productmanager.ProductInfo;
      reader.readMessage(value,proto.productmanager.ProductInfo.deserializeBinaryFromReader);
      msg.setProduct(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.IntGetProductForStoreProductReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.IntGetProductForStoreProductReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.IntGetProductForStoreProductReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntGetProductForStoreProductReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProduct();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.productmanager.ProductInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProductInfo product = 1;
 * @return {?proto.productmanager.ProductInfo}
 */
proto.productmanager.IntGetProductForStoreProductReply.prototype.getProduct = function() {
  return /** @type{?proto.productmanager.ProductInfo} */ (
    jspb.Message.getWrapperField(this, proto.productmanager.ProductInfo, 1));
};


/**
 * @param {?proto.productmanager.ProductInfo|undefined} value
 * @return {!proto.productmanager.IntGetProductForStoreProductReply} returns this
*/
proto.productmanager.IntGetProductForStoreProductReply.prototype.setProduct = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.productmanager.IntGetProductForStoreProductReply} returns this
 */
proto.productmanager.IntGetProductForStoreProductReply.prototype.clearProduct = function() {
  return this.setProduct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.productmanager.IntGetProductForStoreProductReply.prototype.hasProduct = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.UpdateStockRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.UpdateStockRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.UpdateStockRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.UpdateStockRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sku: jspb.Message.getFieldWithDefault(msg, 2, ""),
    stockOnHandAdjustment: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.UpdateStockRequest}
 */
proto.productmanager.UpdateStockRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.UpdateStockRequest;
  return proto.productmanager.UpdateStockRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.UpdateStockRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.UpdateStockRequest}
 */
proto.productmanager.UpdateStockRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStockOnHandAdjustment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.UpdateStockRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.UpdateStockRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.UpdateStockRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.UpdateStockRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStockOnHandAdjustment();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.UpdateStockRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.UpdateStockRequest} returns this
 */
proto.productmanager.UpdateStockRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sku = 2;
 * @return {string}
 */
proto.productmanager.UpdateStockRequest.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.UpdateStockRequest} returns this
 */
proto.productmanager.UpdateStockRequest.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 stock_on_hand_adjustment = 3;
 * @return {number}
 */
proto.productmanager.UpdateStockRequest.prototype.getStockOnHandAdjustment = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.UpdateStockRequest} returns this
 */
proto.productmanager.UpdateStockRequest.prototype.setStockOnHandAdjustment = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.UpdateStockReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.UpdateStockReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.UpdateStockReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.UpdateStockReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.UpdateStockReply}
 */
proto.productmanager.UpdateStockReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.UpdateStockReply;
  return proto.productmanager.UpdateStockReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.UpdateStockReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.UpdateStockReply}
 */
proto.productmanager.UpdateStockReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.UpdateStockReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.UpdateStockReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.UpdateStockReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.UpdateStockReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.IntUpdateStockForShippedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.IntUpdateStockForShippedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.IntUpdateStockForShippedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntUpdateStockForShippedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    quantity: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.IntUpdateStockForShippedRequest}
 */
proto.productmanager.IntUpdateStockForShippedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.IntUpdateStockForShippedRequest;
  return proto.productmanager.IntUpdateStockForShippedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.IntUpdateStockForShippedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.IntUpdateStockForShippedRequest}
 */
proto.productmanager.IntUpdateStockForShippedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProductId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.IntUpdateStockForShippedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.IntUpdateStockForShippedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.IntUpdateStockForShippedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntUpdateStockForShippedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.IntUpdateStockForShippedRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.IntUpdateStockForShippedRequest} returns this
 */
proto.productmanager.IntUpdateStockForShippedRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 product_id = 2;
 * @return {number}
 */
proto.productmanager.IntUpdateStockForShippedRequest.prototype.getProductId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.IntUpdateStockForShippedRequest} returns this
 */
proto.productmanager.IntUpdateStockForShippedRequest.prototype.setProductId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 quantity = 3;
 * @return {number}
 */
proto.productmanager.IntUpdateStockForShippedRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.IntUpdateStockForShippedRequest} returns this
 */
proto.productmanager.IntUpdateStockForShippedRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.IntUpdateStockForShippedReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.IntUpdateStockForShippedReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.IntUpdateStockForShippedReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntUpdateStockForShippedReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.IntUpdateStockForShippedReply}
 */
proto.productmanager.IntUpdateStockForShippedReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.IntUpdateStockForShippedReply;
  return proto.productmanager.IntUpdateStockForShippedReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.IntUpdateStockForShippedReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.IntUpdateStockForShippedReply}
 */
proto.productmanager.IntUpdateStockForShippedReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.IntUpdateStockForShippedReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.IntUpdateStockForShippedReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.IntUpdateStockForShippedReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntUpdateStockForShippedReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.IntUpdateStockForCancelledRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.IntUpdateStockForCancelledRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.IntUpdateStockForCancelledRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntUpdateStockForCancelledRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    quantity: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.IntUpdateStockForCancelledRequest}
 */
proto.productmanager.IntUpdateStockForCancelledRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.IntUpdateStockForCancelledRequest;
  return proto.productmanager.IntUpdateStockForCancelledRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.IntUpdateStockForCancelledRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.IntUpdateStockForCancelledRequest}
 */
proto.productmanager.IntUpdateStockForCancelledRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProductId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.IntUpdateStockForCancelledRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.IntUpdateStockForCancelledRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.IntUpdateStockForCancelledRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntUpdateStockForCancelledRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.IntUpdateStockForCancelledRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.IntUpdateStockForCancelledRequest} returns this
 */
proto.productmanager.IntUpdateStockForCancelledRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 product_id = 2;
 * @return {number}
 */
proto.productmanager.IntUpdateStockForCancelledRequest.prototype.getProductId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.IntUpdateStockForCancelledRequest} returns this
 */
proto.productmanager.IntUpdateStockForCancelledRequest.prototype.setProductId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 quantity = 3;
 * @return {number}
 */
proto.productmanager.IntUpdateStockForCancelledRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.IntUpdateStockForCancelledRequest} returns this
 */
proto.productmanager.IntUpdateStockForCancelledRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.IntUpdateStockForCancelledReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.IntUpdateStockForCancelledReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.IntUpdateStockForCancelledReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntUpdateStockForCancelledReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.IntUpdateStockForCancelledReply}
 */
proto.productmanager.IntUpdateStockForCancelledReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.IntUpdateStockForCancelledReply;
  return proto.productmanager.IntUpdateStockForCancelledReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.IntUpdateStockForCancelledReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.IntUpdateStockForCancelledReply}
 */
proto.productmanager.IntUpdateStockForCancelledReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.IntUpdateStockForCancelledReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.IntUpdateStockForCancelledReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.IntUpdateStockForCancelledReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntUpdateStockForCancelledReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.IntUpdateAllocatedStockRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.IntUpdateAllocatedStockRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.IntUpdateAllocatedStockRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntUpdateAllocatedStockRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    quantity: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.IntUpdateAllocatedStockRequest}
 */
proto.productmanager.IntUpdateAllocatedStockRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.IntUpdateAllocatedStockRequest;
  return proto.productmanager.IntUpdateAllocatedStockRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.IntUpdateAllocatedStockRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.IntUpdateAllocatedStockRequest}
 */
proto.productmanager.IntUpdateAllocatedStockRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProductId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.IntUpdateAllocatedStockRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.IntUpdateAllocatedStockRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.IntUpdateAllocatedStockRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntUpdateAllocatedStockRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string company_id = 1;
 * @return {string}
 */
proto.productmanager.IntUpdateAllocatedStockRequest.prototype.getCompanyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.productmanager.IntUpdateAllocatedStockRequest} returns this
 */
proto.productmanager.IntUpdateAllocatedStockRequest.prototype.setCompanyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 product_id = 2;
 * @return {number}
 */
proto.productmanager.IntUpdateAllocatedStockRequest.prototype.getProductId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.IntUpdateAllocatedStockRequest} returns this
 */
proto.productmanager.IntUpdateAllocatedStockRequest.prototype.setProductId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 quantity = 3;
 * @return {number}
 */
proto.productmanager.IntUpdateAllocatedStockRequest.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.productmanager.IntUpdateAllocatedStockRequest} returns this
 */
proto.productmanager.IntUpdateAllocatedStockRequest.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.productmanager.IntUpdateAllocatedStockReply.prototype.toObject = function(opt_includeInstance) {
  return proto.productmanager.IntUpdateAllocatedStockReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.productmanager.IntUpdateAllocatedStockReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntUpdateAllocatedStockReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.productmanager.IntUpdateAllocatedStockReply}
 */
proto.productmanager.IntUpdateAllocatedStockReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.productmanager.IntUpdateAllocatedStockReply;
  return proto.productmanager.IntUpdateAllocatedStockReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.productmanager.IntUpdateAllocatedStockReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.productmanager.IntUpdateAllocatedStockReply}
 */
proto.productmanager.IntUpdateAllocatedStockReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.productmanager.IntUpdateAllocatedStockReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.productmanager.IntUpdateAllocatedStockReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.productmanager.IntUpdateAllocatedStockReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.productmanager.IntUpdateAllocatedStockReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.productmanager);
